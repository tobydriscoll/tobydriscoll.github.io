[{"authors":null,"categories":null,"content":"Toby Driscoll is a Unidel Chaired Professor in the Department of Mathematical Sciences at the University of Delaware. His research interests are in scientific computation, mathematical software, and applications of mathematics in the life sciences.\nDownload my CV .\n","date":1563292512,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1562946912,"objectID":"bcd8b92ffec473009473572f345ee8f9","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Toby Driscoll is a Unidel Chaired Professor in the Department of Mathematical Sciences at the University of Delaware. His research interests are in scientific computation, mathematical software, and applications of mathematics in the life sciences.","tags":null,"title":"Toby Driscoll","type":"authors"},{"authors":["Toby Driscoll"],"categories":null,"content":" Buy in print at the SIAM bookstore. Members of SIAM, including student members, get a 30% discount. Buy an e-book at the Google Play store. A rental option is also available. This textbook is designed to introduce undergraduates in math, computer science, engineering, and related fields to the principles and practice of numerical computation. Our approach emphasizes linear algebra and approximation. The text presents mathematical underpinnings and analysis, complemented with 45 functions and over 160 examples coded in MATLAB, all available for download. Previous experience in MATLAB is not required. The functions and examples have also been implemented in Julia and Python.\nThe text is organized to be useful for either a one-semester introduction or two-semester sequence, with the most advanced techniques and concepts held back for the second half of the book.\nPlease note the known errata.\nResources The book’s functions and example scripts can be downloaded as a MATLAB toolbox and installed by double-clicking the file. Alternatively, you can visit the Github page that has the needed files, as well as suggested in-class labs and projects, slides for instructors, and links to some (slightly outdated) videos linked to the text.\nThere are also Julia versions and Python versions of the function and example files.\nContents Numbers, problems, and algorithms Floating point numbers Problems and conditioning Stability of algorithms Square linear systems Polynomial interpolation Computing with matrices Linear systems LU factorization Efficiency of matrix computations Row pivoting Vector and matrix norms Conditioning of linear systems Exploiting matrix structure Overdetermined linear systems Fitting functions to data The normal equations The QR factorization Computing QR factorizations Roots of nonlinear equations The rootfinding problem Fixed point iteration Newton’s method in one variable Interpolation-based methods Newton for nonlinear systems Quasi-Newton methods Nonlinear least squares Piecewise interpolation and calculus The interpolation problem Piecewise linear interpolation Cubic splines Finite differences Convergence of finite differences Numerical integration Adaptive integration Initial-value problems for ODEs Basics of IVPs Euler’s method Systems of differential equations Runge-Kutta methods Adaptive Runge-Kutta Multistep methods Implementation of multistep methods Zero-stability of multistep methods Matrix analysis From matrix to insight Eigenvalue decomposition Singular value decomposition Symmetry and definiteness Dimension reduction Krylov methods in linear algebra Sparsity and structure Power iteration Inverse iteration Krylov subspaces GMRES MINRES and conjugate gradients Matrix-free iterations Preconditioning Global function approximation Polynomial interpolation The barycentric formula Stability of polynomial interpolation Orthogonal polynomials Trigonometric interpolation Spectrally accurate integration Improper integrals Boundary-value problems Shooting Differentiation matrices Collocation for linear problems Nonlinearity and boundary conditions The Galerkin method Diffusion equations Black-Scholes equation The method of lines Absolute stability Stiffness Method of lines for parabolic PDEs Advection equations Traffic flow Upwinding and stability Absolute stability for advection The wave equation Two-dimensional problems Tensor-product discretizations Two-dimensional diffusion and advection Laplace and Poisson equations Nonlinear elliptic PDEs Gallery ","date":1559779200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1559779200,"objectID":"0455b53ad1327a6a3818103e97a2793f","permalink":"https://tobydriscoll.net/project/fnc/","publishdate":"2019-06-06T00:00:00Z","relpermalink":"/project/fnc/","section":"project","summary":"Undergraduate textbook in computational mathematics.","tags":["book","matlab","scientific computing","teaching"],"title":"Fundamentals of Numerical Computation","type":"project"},{"authors":["Toby Driscoll"],"categories":null,"content":" Buy from the SIAM bookstore. Members of SIAM, including student members, get a 30% discount. Download PDF for free. Written by Nick Trefethen, Asgeir Birkisson, and myself, Exploring ODEs takes a look at ordinary differential equations unlike any other text. Rather than focusing on the mechanics of finding solutions in a limited number of special problems, we use Chebfun to illustrate the wide range of behavior of those solutions for a variety of linear, nonlinear, and multidimensional problems, including initial-value, boundary-value, and eigenvalue problems. Each short chapter includes a detailed application and a favorite reference. The text is accessible as an accompaniment or follow-up to a standard first undergraduate text on ODEs. All of the MATLAB codes generating the examples and figures are available for download, as is the full text in PDF, from the book’s website.\nContents Introduction First-order scalar linear ODEs First-order scalar nonlinear ODEs Second-order equations and damped oscillations Boundary-value problems Eigenvalues of linear BVPs Variable coefficients and adjoints Resonance Second-order equations in the phase plane Systems of equations The fundamental existence theorem Random functions and random ODEs Chaos Linear systems and linearization Stable and unstable fixed points Multiple solutions of nonlinear BVPs Bifurcation Continuation and path-following Periodic ODEs Boundary and interior layers Into the complex plane Time-dependent PDEs Appendix A: Chebfun and its ODE algorithms Appendix B: 100 more examples ","date":1559779200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1559779200,"objectID":"e3360cc5c894999f21677288ce9840e4","permalink":"https://tobydriscoll.net/project/explode/","publishdate":"2019-06-06T00:00:00Z","relpermalink":"/project/explode/","section":"project","summary":"A different kind of introduction to ODEs.","tags":["book","matlab","teaching"],"title":"Exploring ODEs","type":"project"},{"authors":["Toby Driscoll"],"categories":null,"content":" Buy at the SIAM bookstore. Members of SIAM, including student members, get a 30% discount. Buy at Amazon in the U.S. Learning MATLAB is a concise, essentials-only introduction to MATLAB for those who have programming experience in other procedural languages. At about 100 pages, it’s meant as a supplemental guide in a numerical analysis or scientific computing course or as a standalone tutorial for those who need to get started quickly in MATLAB. Learning MATLAB does not cover every feature or calling syntax, but focuses on those parts of MATLAB that have proven themselves indispensible to me in my 20 years as a MATLAB programmer. (Fun fact: I was a runaway winner of “MATLAB Jeopardy” at the 1995 MATLAB Conference.) The book grew out of a summer workshop that I taught to grad students for 8 years at Delaware.\nThe chapters in Learning MATLAB are: Introduction, Arrays and matrices, Scripts and functions, More on functions, Graphics, Advanced techniques, and Scientific computing. Each feature is demonstrated by examples, and every chapter includes exercises ranging from routine to very challenging.\n","date":1559779200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1559779200,"objectID":"6768b49cf9b35ac73e6983cffcce4a18","permalink":"https://tobydriscoll.net/project/learning-matlab/","publishdate":"2019-06-06T00:00:00Z","relpermalink":"/project/learning-matlab/","section":"project","summary":"Streamlined approach to MATLAB for veteran programmers.","tags":["book","matlab","programming","teaching"],"title":"Learning MATLAB","type":"project"},{"authors":["Toby Driscoll"],"categories":null,"content":" See the table of contents of this book Buy the book directly from CUP Buy the book at Amazon (U.S.) Schwarz-Christoffel Mapping is a monograph by myself and Nick Trefethen on the constructive and computational aspects of Schwarz–Christoffel conformal maps. These maps transform the interior or exterior of a region bounded by a polygon to the interior of a disk, half-plane, strip, rectangle, or more exotic canonical region. Unlike many other numerical conformal mapping methods, they are substantially faster to compute than the full solution of an elliptic partial differential equation on the same domain. Because the maps are conformal, they offer a powerful way to solve certain classical problems for the Laplacian operator.\nThe book includes 76 quantitatively precise figures illustrating theoretical and applied aspects of Schwarz–Christoffel maps. The appendix includes code snippets that produce some of these figures using my free Schwarz-Christoffel Toolbox for MATLAB.\n","date":1559692800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1559692800,"objectID":"33bea5a4bc85be368f7bb43bc03c715a","permalink":"https://tobydriscoll.net/project/schwarz-christoffel-mapping/","publishdate":"2019-06-05T00:00:00Z","relpermalink":"/project/schwarz-christoffel-mapping/","section":"project","summary":"Monograph on a major conformal mapping method.","tags":["book"],"title":"Schwarz–Christoffel Mapping","type":"project"},{"authors":["Toby Driscoll"],"categories":null,"content":"The SC Toolbox is a problem-solving environment for computation and interaction with conformal maps to regions bounded by polygons, including unbounded regions, logical quadrilaterals, and channels. It includes a module for the solution of the Laplace equation on such regions with piecewise constant boundary conditions, to ten digits or more in seconds. Nearly all of the Toolbox functions are accessible through a graphical interface.\nThe software is distributed primarily on Github. You can directly download a zip archive of the latest release.\nThere is an old user guide that remains fairly relevant. There are also many usage examples in my book, which has a lot of mathematical and computational information about S–C maps.\nIf you need a copy for an older version of MATLAB (major versions 4,5,6), please contact me.\n","date":1559692800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1559692800,"objectID":"85d10f086846d8fa2279e9e5fe812590","permalink":"https://tobydriscoll.net/project/sc-toolbox/","publishdate":"2019-06-05T00:00:00Z","relpermalink":"/project/sc-toolbox/","section":"project","summary":"Conformal mapping to regions bounded by polygons.","tags":["software","matlab"],"title":"Schwarz–Christoffel Toolbox for MATLAB","type":"project"},{"authors":["Toby Driscoll"],"categories":null,"content":"In over 25 years of MATLAB programming, I’ve contributed a few utilities and MATLAB gadgets that I’ve found helpful. For example:\nunplot Delete the most recently plotted object(s). Used it so, so many times. latex Convert a matrix into a LaTeX matrix or table. Maybe the table data type in MATLAB has obsoleted this, but it’s still handy for writing papers from time to time. gslope Click twice on a plot and get the slope between the points. Useful for determining convergence rates. sparse Toeplitz matrix construction Some practical sparse matrices are Toeplitz. This takes the pain out of constructing them. piecewise-defined function builder Creates a single callable function from a collection of piecewise definitions. ","date":1559779200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1559779200,"objectID":"79f725f9d60a3fe08fd42d82d7e4c1ca","permalink":"https://tobydriscoll.net/project/matlabcentral/","publishdate":"2019-06-06T00:00:00Z","relpermalink":"/project/matlabcentral/","section":"project","summary":"Contributions to the MATLAB ecosystem.","tags":["software","matlab","programming"],"title":"MATLAB software","type":"project"},{"authors":["Toby Driscoll"],"categories":null,"content":"In 1991, mathematicians Gordon, Webb, and Wolpert (Invent. Math. 110, pp 1–22) solved a famous problem posed by M. Kac: “Can one hear the shape of a drum?” That is, do the Dirichlet eigenvalues of a membrane determine the shape of the membrane? Their answer was “No!”, and they used a powerful mathematical technique to produce a counterexample, which in its simplest form is a pair of eight-sided nonconvex polygons. Gordon, Webb, and Wolpert also noted that a more elementary technique known as transplantation can be used to show that the spectrum of the Laplacian with Dirichlet conditions is the same for both regions. However, actually finding what the eigenvalues are is far more difficult; it’s essentially impossible to do analytically.\nWu, Sprung, and Martorell (Physical Review E , Jan 1995) were among the first to present the results of computations of modes for these shapes, but the accuracy of their results was not clear. Physicists Sridhar and Kudrolli at Northeastern University built microwave cavities in the shapes of the two polygons and determined 54 eigenvalues experimentally (Physical Review Letters, April 4, 1994,Science News, September 17, 1994). Their results were accurate only to about 0.1%.\nA little-known method due to Descloux and Tolley performed more accurately than all of these. The underlying principle is to exploit the well-known expansions of an eigenfunction near the corners. The criterion that selects eigenvalues is the matching of values and normal derivatives of the local expansions at interfaces within the polygons. Using this method in MATLAB, and incorporating a crucial improvement, in 1997 I published eigenvalues and modes 1–25 for both regions that were accurate to twelve digits.\nOne of the most basic uses of eigenmodes is to represent vibrations governed by the wave equation. Below are a few animations of such vibrations, based on combinations of the first sixteen modes. Each movie runs for three periods of the first mode.\nMode $n$ contributes $(1/n)^2$ to the solution. Mode $n$ contributes $1/n$ to the solution. Odd mode $n$ contributes $1/n$ to the solution with an alternating sign. Approximation to the drums being `plucked’ at their centers. The story of these and other isospectral shapes continued to develop from there, mathematically and computationally, but I was not much involved with most of it.\nGallery ","date":1560124800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1560124800,"objectID":"6fc1561932b51ad3c5020676f4fafefd","permalink":"https://tobydriscoll.net/project/drums/","publishdate":"2019-06-10T00:00:00Z","relpermalink":"/project/drums/","section":"project","summary":"Eigenmodes of isospectral drums.","tags":["scientific computing"],"title":"Isospectral drums","type":"project"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature. Slides can be added in a few ways:\nCreate slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes. Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://tobydriscoll.net/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":["Tobin A Driscoll","Richard J Braun","Rayanne A Luke","Dominick Sinopoli","Aaashish Phatak","Julianna Dorsch","Carolyn G Begley","Deborah Awisi-Gyau"],"categories":[],"content":"","date":1681235521,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1681235521,"objectID":"5a42165c32347ae463f070c7496e57d2","permalink":"https://tobydriscoll.net/publication/driscoll-fitting-ode-models-tear-2023/","publishdate":"2023-04-11T13:52:01-04:00","relpermalink":"/publication/driscoll-fitting-ode-models-tear-2023/","section":"publication","summary":"The contribution of different physical effects to tear breakup (TBU) in subjects with no self-reported history of dry eye are quantified. An automated system using a convolutional neural network is deployed on fluorescence (FL) imaging videos to identify multiple likely TBU instances in each trial. Once identified, extracted FL intensity data was fit by mathematical models that included tangential flow along the eye, evaporation, osmosis and FL intensity of emission from the tear film. The mathematical models consisted of systems of ordinary differential equations for the aqueous layer thickness, osmolarity, and the FL concentration. Optimizing the fit of the models to the FL intensity data determined the mechanism(s) driving each instance of TBU and produced an estimate of the osmolarity within TBU. Fits were produced for 467 instances of potential TBU from 15 non-DED subjects. The results showed a distribution of causes of TBU in these healthy subjects, as reflected by estimated flow and evaporation rates, which appear to agree well with previously published data. Final osmolarity depended strongly on the TBU mechanism, generally increasing with evaporation rate but complicated by the dependence on flow. The results suggest that it might be possible to classify individual subjects and provide a baseline for comparison and potential classification of dry eye disease subjects.","tags":[],"title":"Fitting ODE models of tear film breakup","type":"publication"},{"authors":["Mary J Taranchuk","Laura J Cummings","Tobin A Driscoll","Richard J Braun"],"categories":["research"],"content":"","date":1681171200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1681171200,"objectID":"d09f1da32efb9dcb5407ff2fd6bf8d3e","permalink":"https://tobydriscoll.net/publication/taranchuk-extensional-flow-free-2023/","publishdate":"2023-04-11T00:00:00Z","relpermalink":"/publication/taranchuk-extensional-flow-free-2023/","section":"publication","summary":"Motivated by problems arising in tear film dynamics, we present a model for the extensional flow of thin sheets of nematic liquid crystal. The rod-like molecules of these substances impart an elastic contribution to its response. We rescale a weakly elastic model due to Cummings et al. [European Journal of Applied Mathematics 25 (2014): 397-423] to describe a case of moderate elasticity. The resulting system of two nonlinear partial differential equations for sheet thickness and axial velocity is nonlinear and fourth order in space, but still represents a significant reduction of the full system. We analyze solutions arising from several different boundary conditions, motivated by the underlying application, with particular focus on dynamics and underlying mechanisms under stretching. We solve the system numerically, via collocation with either finite difference or Chebyshev spectral discretization in space, together with implicit time stepping. At early times, depending on the initial film shape, pressure either aids or opposes extensional flow, which changes the shape of the sheet and may result in the loss of a minimum or maximum at the moving end. We contrast this finding with the cases of weak elasticity and Newtonian flow, where the sheet retains all extrema from the initial condition throughout time. ","tags":[],"title":"Extensional flow of a free film of nematic liquid crystal with moderate elasticity","type":"publication"},{"authors":["Richard J Braun","Rayanne A Luke","Tobin A Driscoll","Carolyn G Begley"],"categories":["research"],"content":"","date":1631217237,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1631217237,"objectID":"31d2f1e449bd3da818d0b06e55a6fdce","permalink":"https://tobydriscoll.net/publication/braun-dynamics-mechanisms-breakup-2021/","publishdate":"2021-09-09T15:53:57-04:00","relpermalink":"/publication/braun-dynamics-mechanisms-breakup-2021/","section":"publication","summary":"The human tear film is rapidly established after each blink, and is essential for clear vision and eye health. This paper reviews mathematical models and theories for the human tear film on the ocular surface, with an emphasis on localized flows where the tear film may fail. The models attempt to identify the important physical processes, and their parameters, governing the tear film in health and disease.","tags":[],"title":"Dynamics and mechanisms for tear breakup (TBU) on the ocular surface","type":"publication"},{"authors":["Tobin A Driscoll","Richard J Braun","Carolyn G Begley"],"categories":["research"],"content":"","date":1630454400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1630454400,"objectID":"c4d71affd2dd5de02937294362b18d96","permalink":"https://tobydriscoll.net/publication/driscoll-automatic-detection-2021/","publishdate":"2021-09-17T18:05:48.240154Z","relpermalink":"/publication/driscoll-automatic-detection-2021/","section":"publication","summary":"Purpose: Fluorescence imaging is a valuable tool for studying tear film dynamics and corneal staining. Automating the quantification of fluorescence images is a challenging necessary step for making connections to mathematical models. A significant part of the challenge is identifying the region of interest, specifically the cornea, for collected data with widely varying characteristics. Methods: The gradient of pixel intensity at the cornea– sclera limbus is used as the objective of standard optimization to find a circle that best represents the cornea. Results of the optimization in one image are used as initial conditions in the next image of a sequence. Additional initial conditions are chosen heuristically. The algorithm is coded in open-source software. Results: The algorithm was first applied to 514 videos of 26 normal subjects, for a total of over 87,000 images. Only in 12 of the videos does the standard deviation in the detected corneal radius exceed 1% of the image height, and only 3 exceeded 2%. The algorithm was applied to a sample of images from a second study with 142 dry-eye subjects. Significant staining was present in a substantial number of these images. Visual inspection and statistical analysis show good results for both normal and dry-eye images. Conclusion: The new algorithm is highly effective over a wide range of tear film and corneal staining images collected at different times and locations.","tags":["tear film"],"title":"Automatic detection of the cornea location in video captures of fluorescence","type":"publication"},{"authors":["Rayanne A. Luke","Richard J. Braun","Tobin A. Driscoll","Dominick Sinopoli","Vishruta Yawatkar","Luyang You","Ashish Phatak","Carolyn G. Begley"],"categories":["research"],"content":"","date":1622505600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1644602571,"objectID":"5e39b263c58988e585fc11156549f8e0","permalink":"https://tobydriscoll.net/publication/luke-fitting-simplified-models-2021/","publishdate":"2022-02-11T18:02:48.616084Z","relpermalink":"/publication/luke-fitting-simplified-models-2021/","section":"publication","summary":"","tags":[],"title":"Fitting Simplified Models to Machine Learning-Identified Tear Film Breakup","type":"publication"},{"authors":["Rayanne A Luke","Richard J Braun","Tobin A Driscoll","Deborah Awisi-Gyau","Carolyn G. Begley"],"categories":["research"],"content":"","date":1619901778,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1619901778,"objectID":"16f982537c0b74bd4bd175250762f4fe","permalink":"https://tobydriscoll.net/publication/luke-parameter-estimation-mixed-2021/","publishdate":"2021-09-09T16:42:58-04:00","relpermalink":"/publication/luke-parameter-estimation-mixed-2021/","section":"publication","summary":"Etiologies of tear breakup include evaporation-driven, divergent flow-driven, and a combination of these two. A mathematical model incorporating evaporation and lipid-driven tangential flow is fit to fluorescence imaging data. The lipid-driven motion is hypothesized to be caused by localized excess lipid, or “globs.” Tear breakup quantities such as evaporation rates and tangential flow rates cannot currently be directly measured during breakup. We determine such variables by fitting mathematical models for tear breakup and the computed fluorescent intensity to experimental intensity data gathered in vivo. Parameter estimation is conducted via least squares minimization of the difference between experimental data and computed answers using either the trust-region-reflective or Levenberg–Marquardt algorithm. Best-fit determination of tear breakup parameters supports the notion that evaporation and divergent tangential flow can cooperate to drive breakup. The resulting tear breakup is typically faster than purely evaporative cases. Many instances of tear breakup may have similar causes, which suggests that interpretation of experimental results may benefit from considering multiple mechanisms.","tags":[],"title":"Parameter estimation for mixed-mechanism tear film thinning","type":"publication"},{"authors":["Rayanne A Luke","Richard J Braun","Tobin A Driscoll","Carolyn G. Begley","Deborah Awisi-Gyau"],"categories":["research"],"content":"","date":1591043379,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1591043379,"objectID":"801f55c42ff3addbb80cf28a138a6a62","permalink":"https://tobydriscoll.net/publication/luke-parameter-estimation-evaporation-2020/","publishdate":"2021-09-09T16:29:39-04:00","relpermalink":"/publication/luke-parameter-estimation-evaporation-2020/","section":"publication","summary":"Many parameters affect tear film thickness and fluorescent intensity distributions over time; exact values or ranges for some are not well known. We conduct parameter estimation by fitting to fluorescent intensity data recorded from normal subjects’ tear films. The fitting is done with thin film fluid dynamics models that are nonlinear partial differential equation models for the thickness, osmolarity and fluorescein concentration of the tear film for circular (spot) or linear (streak) tear film breakup. The corresponding fluorescent intensity is computed from the tear film thickness and fluorescein concentration. The least squares error between computed and experimental fluorescent intensity determines the parameters. The results vary across subjects and trials. The optimal values for variables that cannot be measured in vivo within tear film breakup often fall within accepted experimental ranges for related tear film dynamics; however, some instances suggest that a wider range of parameter values may be acceptable. ","tags":[],"title":"Parameter estimation for evaporation-driven tear film thinning","type":"publication"},{"authors":["Kevin W Aiton","Tobin A Driscoll"],"categories":["research"],"content":"","date":1577909832,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577909832,"objectID":"009218aa403c014c6cd32a2b0dbf42bb","permalink":"https://tobydriscoll.net/publication/aiton-preconditioned-nonlinear-iterations-2020/","publishdate":"2021-09-09T16:17:12-04:00","relpermalink":"/publication/aiton-preconditioned-nonlinear-iterations-2020/","section":"publication","summary":"The additive Schwarz method is usually presented as a preconditioner for a PDE linearization based on overlapping subsets of nodes from a global discretization. It has previously been shown how to apply Schwarz preconditioning to a nonlinear problem. By first replacing the original global PDE with the Schwarz overlapping problem, the global discretization becomes a simple union of subdomain discretizations, and unknowns do not need to be shared. In this way, restrictive-type updates can be avoided, and subdomains need to communicate only via interface interpolations. The resulting preconditioner can be applied linearly or nonlinearly. In the latter case, nonlinear subdomain problems are solved independently in parallel, and the frequency and amount of interprocess communication can be greatly reduced compared to global preconditioning of the sequence of linearized problems.\n\nRead More: https://epubs.siam.org/doi/abs/10.1137/19M1242483?casa_token=NFkef7E_brwAAAAA:Kguze98V4mNMIobvPkTrYLGbEjwTCWChkGppg0IJ8syF7Y9x-A2yDo6FsTElYqFmZ9PVe4hkAg","tags":[],"title":"Preconditioned nonlinear iterations for overlapping Chebyshev discretizations with independent grids","type":"publication"},{"authors":["Tobin A Driscoll"],"categories":null,"content":"","date":1575244800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1575244800,"objectID":"e437b379d4f688784a8c9f6115bde590","permalink":"https://tobydriscoll.net/publication/driscoll-complexregions-2019/","publishdate":"2019-06-06T14:48:49.892338Z","relpermalink":"/publication/driscoll-complexregions-2019/","section":"publication","summary":"","tags":null,"title":"ComplexRegions.jl: A Julia package for regions in the complex plane","type":"publication"},{"authors":["Richard J Braun","Tobin A Driscoll","Carolyn G Begley"],"categories":null,"content":"","date":1572825600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1572825600,"objectID":"a45ca4eb4d31126153b5db88e0925928","permalink":"https://tobydriscoll.net/publication/braun-mathematical-models-2019/","publishdate":"2019-06-06T14:48:50.023883Z","relpermalink":"/publication/braun-mathematical-models-2019/","section":"publication","summary":"","tags":null,"title":"Mathematical Models of the Tear Film","type":"publication"},{"authors":["Toby Driscoll"],"categories":[],"content":"I’ve spent the last two spring semesters teaching ODEs (ordinary differential equations) to a total of about 170 biomedical and chemical engineering majors. The content is dictated by a number of constraints: the perceived desires of the client departments, multiple instructors, all of whom have more experience with the course than I do, and traditional expectations. Based on a limited survey of popular textbooks (this, this, and our choice, Brannan and Boyce), many courses like this are quite similar. (You can look through my notes, rough as they are.)\nWhat I find particularly disheartening about these books, and the courses they imply, is that they share an overwhelming emphasis on hand computations of formulas to produce “solutions” of particular problems. I scare-quote “solutions” here because it’s become clear that the majority of students can’t readily comprehend their own outputs. And really, why should they? Most homework (and, by implication, exam) problems are going to simply ask them to produce the output, not interpret it.\nNot long ago, this approach was not hard to justify. What could be more important to building a bridge or going to the Moon than getting the right answer? Of course it’s absurd to suggest that getting the right answer no longer matters. But what does no longer matter is whether the student can crank that answer out by hand.\nI’m old enough to remember a middle school lecture on finding values of logarithms by linearly interpolating values from a table. I sincerely hope this is no longer done, though I can imagine the objections when it was proposed for elimination: “Isn’t it good for them to learn linear interpolation? What if they’re stuck on a desert island without a calculator? How will they recognize when the calculator gives a clearly wrong answer?” You’ll hear much the same said about many other dubious lessons that are still very much alive today, such as days of calculus devoted to drawing (bad) graphs by hand.\nLong after the original driving need to compute or do something by hand has vanished, we’re able to supply alternative reasons to do it. These reasons seem to come in two flavors: hypothetical utility and tradition. Claims that students “learn concepts better” by hand computing are almost never substantiated by evidence, and in any case tend to beg the question of which concepts are in play. I think we can conclusively retire the “they may not always have a calculator” form of manufactured need. As for grimly continuing a tradition, sometimes disguised within a beguiling “what’s the harm?” phrasing, what you get is a recipe for stagnation and irrelevance. The cost is always a lost opportunity to teach something else.\nI would not suggest that students never solve an example problem by hand. An ODE course graduate who cannot solve, say, $y^{\\prime\\prime} + 4y=1$ has missed something vital. But I don’t see what’s to be gained by practicing on $y^{\\prime\\prime} + 5y’ + 4y=t^2e^{-2t}$. All the time and focus needed to wrest an answer from that problem is purely mechanical, never going beyond the application of a rigid algorithm.\nNot only are such algorithms much better performed by a computer, they are incredibly fragile. The analytical solution of $y^{\\prime\\prime} + ty=1$ is so much harder to produce and interpret than $y^{\\prime\\prime} + 4y=1$ that it might as well be of a different universe altogether. And that’s still just a linear problem!\nIt’s sensible to focus on the most fundamental ODE problems with analytical solutions, like the linearly damped oscillator and the logistic equation. We can totally dissect those problems, and they represent the simplest form of more complicated and realistic models. But when we give the impression that analytical solutions are the primary objective of the ODE world, we grossly distort the true picture. Already when I was a graduate student over 25 years ago, there were great computational ODE tools that would give you a fast and detailed understanding of dynamics. If you were inclined and able, you might go on to make some exact analytical (qualitative) conclusions suggested by the numerical and graphical explorations. But that’s a pursuit for a modestly sized cadre of mathematically advanced academics. It’s not the use case for over 99% of our undergraduates taking their one lifetime ODE course.\nRather than trying to turn our students into slow and error-prone Mathematica simulators, we ought to be equipping our students with ODE fluency. Modeling, nondimensionalization, stability, and resonance are all more fundamental and vital than knowing every last case of the method of undetermined coefficients. Knowing the stability implications of poles in a transfer function is more important than performing partial fraction decompositions to invert Laplace transforms by hand.\nWhat’s a more relevant use of time: solving artificial scalar problems carefully selected to have compact analytical solutions, or learning how to simulate …","date":1563292512,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562946912,"objectID":"e3ab5ae744d86069cd1b54e5da071db7","permalink":"https://tobydriscoll.net/blog/the-sorry-state-of-teaching-odes/","publishdate":"2019-07-16T11:55:12-04:00","relpermalink":"/blog/the-sorry-state-of-teaching-odes/","section":"post","summary":"I’ve spent the last two spring semesters teaching ODEs (ordinary differential equations) to a total of about 170 biomedical and chemical engineering majors. The content is dictated by a number of constraints: the perceived desires of the client departments, multiple instructors, all of whom have more experience with the course than I do, and traditional expectations.","tags":["teaching"],"title":"The sorry state of teaching ODEs","type":"post"},{"authors":["Kara L Maki","William D Henshaw","Alex McManus","Richard J Braun","Dylan M Chapp","Tobin A Driscoll"],"categories":null,"content":"","date":1561766400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1561766400,"objectID":"dfae27e25e3058002f450319a27cee74","permalink":"https://tobydriscoll.net/publication/maki-model-tear-film-2019/","publishdate":"2019-10-16T13:57:30.486834Z","relpermalink":"/publication/maki-model-tear-film-2019/","section":"publication","summary":"","tags":null,"title":"A model for tear film dynamics during a realistic blink","type":"publication"},{"authors":[],"categories":[],"content":"I’ve used MATLAB for over 25 years. (And before that, I even used MATRIXx, a late, unlamented attempt at a spinoff, or maybe a ripoff.) It’s not the first language I learned to program in, but it’s the one that I came of age with mathematically. Knowing MATLAB has been very good to my career.\nHowever, it’s impossible to ignore the rise of Python in scientific computing. MathWorks must feel the same way: not only did they add the ability to call Python directly from within MATLAB, but they’ve adopted borrowed some of its language features, such as more aggressive broadcasting for operands of binary operators.\nIt’s reached a point where I have been questioning my continued use of MATLAB in both research and teaching. Yet so much comes easily to me there, and I have so much invested in materials for it, that it was hard to rally motivation to really learn something new.\nEnter the MATLAB-based textbook I’ve co-written for introductory computational math. The book has over 40 functions and 160 computational examples, and it covers what I think is a thorough grounding in the use of MATLAB for numerical scientific computing. So partly as self-improvement, and partly to increase the usefulness of the book, I set out this year to translate the codes into Julia and Python. This experience has led me to a particular perspective on the three languages in relation to scientific computing, which I attempt to capture below.\nI will mostly set aside the issues of cost and openness. MATLAB, unlike Python and Julia, is neither beer-free nor speech-free. This is indeed a huge distinction—for some, a dispositive one–but I want to consider the technical merits. For many years, MATLAB was well beyond any free product in a number of highly useful ways, and if you wanted to be productive, then cost be damned. It’s a separate consideration from the Platonic appeal of a language and ecosystem.\nWhen you do set cost aside, a useful frame for a lot of the differences among these languages lies in their origins. MATLAB, the oldest of the efforts, prioritized math, particularly numerically oriented math. Python, which began in earnest in the late 1980s, made computer science its central focus. Julia, which began in 2009, set out to strike more of a balance between these sides.\nMATLAB Originally, every value in MATLAB was an array of double-precision floating point numbers. Both aspects of this choice, arrays and floating point, were inspired design decisions.\nThe IEEE 754 standard for floating point wasn’t even adopted until 1985, and memory was measured in K, not G. Floating point doubles weren’t the most efficient way to represent characters or integers, but they were what scientists, engineers, and, increasingly, mathematicians wanted to use most of the time. Furthermore, variables did not have to declared and memory did not have to be explicitly allocated. Letting the computer handle those tasks, and whisking data types out of the way, freed up your brain to think about the algorithms that would operate on the data.\nArrays were important because numerical algorithms in linear algebra were coming into their own, in the form of LINPACK and EISPACK. But accessing them with the standard bearer in scientific computing, FORTRAN 77, was a multistep process that involved declaring variables, calling cryptically named routines, compiling code, and then examining data and output files. Writing a matrix multiplication as A*B and getting the answer printed out right away was a game-changer.\nMATLAB also made graphics easy and far more accessible. No fiddly machine-specific libraries with low-level calls, just plot(x,y) and you saw pretty much what anyone else with MATLAB would see. There were more innovations, like baked-in complex numbers, sparse matrices, tools to build cross-platform graphical user interfaces, and a leading-edge suite of ODE solvers, that made MATLAB the place to do scientific computing at the speed of thought.\nHowever, design that was ideal for interactive computations, even lengthy ones, was not always conducive to writing good and performant software. Moving data around between many functions required juggling lots of variables and frequent consultation of documentation about input and output arguments. One function per disk file in a flat namespace was refreshingly simple for a small project, but a headache for a large one. Certain programming patterns (vectorization, memory preallocation) had to be applied if you wanted to avoid speed bottlenecks. Scientific computing was now being applied to far more domains, with vast amounts of different native types of data. Etc.\nMathWorks responded by continuing to innovate within MATLAB: inline functions, nested functions, variable closures, numerous data types, object-oriented features, unit testing frameworks, and on and on. Each innovation was probably the solution to an important problem. But the accumulation of 40 years of these changes has had the side effect of eroding the …","date":1561748256,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1561748256,"objectID":"4d6c4a739a27ef04e5c969d9092cb409","permalink":"https://tobydriscoll.net/blog/matlab-vs.-julia-vs.-python/","publishdate":"2019-06-28T14:57:36-04:00","relpermalink":"/blog/matlab-vs.-julia-vs.-python/","section":"post","summary":"I’ve used MATLAB for over 25 years. (And before that, I even used MATRIXx, a late, unlamented attempt at a spinoff, or maybe a ripoff.) It’s not the first language I learned to program in, but it’s the one that I came of age with mathematically.","tags":[],"title":"Matlab vs. Julia vs. Python","type":"post"},{"authors":["Toby Driscoll"],"categories":[],"content":"At long last, I’ve refreshed the look for this site. Previously it was based on a “Metro UI” style for HTML, which looked nice to me at the time. Actually it still looks pretty nice, but it was named for the Metro design introduced with Windows 8, which tells you that it wasn’t exactly a modern look.\nMore importantly to me, I’ve ditched writing raw HTML for creating a site using the Hugo content creation system. It’s such a headache trying to maintain menus, headers, footers, etc. in raw HTML that updating the old site became too painful to contemplate. On the blogging side, I had been using Wordpress, which I found incredibly slow, wonky, and frustrating. Including snippets of code or math was way too hard, even with extension modules loaded that were supposed to handle it for me, and the results were inconsistent.\nIn Hugo you create content within a folder hierarchy that holds plain text files. These can be in HTML as necessary, but the real workhorse is Markdown, which lets you enter content with simply annotated text. As with all markup languages, the idea is to label the structure of the content and let the formatting be specified separately. Unlike HTML, though, the syntax is concise and easy to type, though of course limited to just the most important element types.\nHugo then converts the Markdown sources into a working site. It’s static, not dynamic, meaning that all the pages are created at once rather than in response to a browser request. This keeps it fast and lean, which is appropriate for a modest personal site.\nOne strength of Hugo is that it supports tons of themes. Of these, the Academic theme quickly jumped out at me. It’s written to provide what a typical personal page in academia requires. To be honest, I feel as though it took me too long to grok how to use the theme, and Hugo in general. You can see the sources for this site if you want to get a feeling by example, which is what I recommend.\nThe last piece was to generate a screen-native CV. I’ve been getting increasingly frustrated with PDF online. It was a huge step forward when it was introduced in 1993, when hardcopy was still the norm. But while we haven’t gone fully paperless, lots of systems such as job applications or promotion documentation simply can’t function any way but fully online now. Yet as pointed out in this great Atlantic piece on the obsolescence of the scientific paper, PDF is intrinsically a simulation of a piece of paper. Because it prioritizes display over structure, it’s often hard to extract information from, and it can’t do something as fundamental as wrap lines of text to fit a screen width.\nFor decades I maintained my CV in LaTeX, with PDF as the output format. This was okay, but getting output from LaTeX in a truly screen-friendly form (basically, HTML) Is. Not. Fun. While the first 80% is easy, the last 20% can be excruciating. Fortunately, with a little regexp replacement, I was able to convert the source to Markdown with manageable effort. Then, thanks to markdown-cv, I’m able to render this as a great-looking document. Yes, I make a PDF version available still—by printing the “real” version from a browser.\nMy dream had been to have the publications part of the CV auto-generated from the data in my publications website section. If I were a more dedicated Hugo hacker, I’m sure I could do it, but I threw in the towel. Besides, there’s something to be said for making sure the CV really looks the way you expect it, and the work of double-entering the publications isn’t that odious.\nThis being summer, I haven’t yet migrated whatever teaching content from the old site I feel is still worthwhile. But it feels nice to have my online presence up to snuff once more. I hope it motivates me to renew a dedication to blogging.\n","date":1561663205,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1561663205,"objectID":"de1d9ed6c9d855ce48b812db43d40cc7","permalink":"https://tobydriscoll.net/blog/new-look-new-tech/","publishdate":"2019-06-27T15:20:05-04:00","relpermalink":"/blog/new-look-new-tech/","section":"post","summary":"At long last, I’ve refreshed the look for this site. Previously it was based on a “Metro UI” style for HTML, which looked nice to me at the time. Actually it still looks pretty nice, but it was named for the Metro design introduced with Windows 8, which tells you that it wasn’t exactly a modern look.","tags":["computing","academia"],"title":"New look, new tech","type":"post"},{"authors":null,"categories":null,"content":" Chebfun is a free MATLAB package and open source software project. Its aim is to provide numerical computation with functions. My interest in and contribution to the system is most visibly in the solution of ordinary and (1+1 dimensional) partial differential equations. Using familiar MATLAB syntax such as \\ and eigs, solutions to boundary-value or eigenvalue problems can be obtained with full numerical precision automatically.\nGallery ","date":1559779200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1559779200,"objectID":"fca3168b0ceab3a0cf7b9ab41dc768c2","permalink":"https://tobydriscoll.net/project/chebfun/","publishdate":"2019-06-06T00:00:00Z","relpermalink":"/project/chebfun/","section":"project","summary":"Computing with functions instead of numbers.","tags":["software","matlab","scientific computing"],"title":"Chebfun","type":"project"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\nFeatures Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides Controls Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;) Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne Two Three A fragment can accept two optional parameters:\nclass: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\nOnly the speaker can read these notes Press S key to view Themes black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}} Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; } Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://tobydriscoll.net/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":["Kevin W Aiton","Tobin A Driscoll"],"categories":null,"content":"","date":1546300800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1546300800,"objectID":"b511b10296d51bcd09d8739e6a436fb5","permalink":"https://tobydriscoll.net/publication/aiton-adaptive-multivariate-2019/","publishdate":"2019-06-06T14:48:50.023057Z","relpermalink":"/publication/aiton-adaptive-multivariate-2019/","section":"publication","summary":"","tags":null,"title":"An Adaptive Partition of Unity Method for Multivariate Chebyshev Polynomial Approximations","type":"publication"},{"authors":["Richard J Braun","Lan Zhong","Tobin A Driscoll","Carolyn G Begley","Deborah Antwi","P Ewen King-Smith"],"categories":null,"content":"","date":1527811200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1527811200,"objectID":"7ee49906e514ce00943d125a3b86b511","permalink":"https://tobydriscoll.net/publication/braun-models-tear-break-2018/","publishdate":"2019-06-06T14:48:50.023883Z","relpermalink":"/publication/braun-models-tear-break-2018/","section":"publication","summary":"","tags":null,"title":"Models for Tear Break Up Dynamics and Imaging","type":"publication"},{"authors":null,"categories":["academia","computing","teaching"],"content":"For a few years, I’ve been a fan of clickers (aka personal response systems) for large lecture sections. Clickers are a simple–and scalable–way to incorporate a little widespread active learning in the classroom. They can’t work miracles, but they do allow me to reward attendance, rouse the students once in a while, and give good feedback to all of us about how well the latest concepts are sinking in. I like the accountability: If you got the question wrong when 80% of the class got it right, that’s on you, but if 20% of the class got it right, that’s on me.\nUD is an iclicker shop. When I want to poll the class, I click a “go” button on a small toolbar that overlays any other application. When I’m done, I click “stop.” I can show the results and designate the correct answer on the spot, or I can go back later and pick the right answer while looking at a screenshot from when the question started.\nIn the past I’ve used clickers with handwritten questions projected using a document camera. I don’t get the screenshot this way, but it works fine. However, in the best case I’m left to manage 50-100 sheets of paper for a course. That’s something I’m increasingly cranky about doing in my life overall, and I’m likely to fail at it during the heat of a lecture, especially when (as I like to do) I start replaying questions from past weeks or months. Plus, if I later decide to tweak a question or the answer choices, I’ve got to scrap a page and rewrite it.\nEnter Jekyll. This is a brilliant software t0ol that converts lightly marked data files into a website. It’s blog-centric, but it can be used for other kinds of data as well, and I’ve customized it for collecting clicker questions. You can get it for yourself from this Github repo. It requires being comfortable with a command line, but it’s not otherwise technically challenging.\nFor instance, in one file I have\n--- layout: question chapter: Introduction title: Derivative --- {::comment} The \\dd macro is defined in /_includes/texmacros.md. {:/comment} What is $\\dd{}{x}\\left(e^x\\right)$? 1. *$e^x$*{: #correct} 1. $x$ 1. $1$ 1. $\\ln(x)$ 1. $\\tan(x)$ The page that results can be viewed here. It’s pretty easy to see how the output arises from the input. All I do is make one file per question, putting them into subdirectories if I want. They’re collected and indexed by the “chapter” property at the top of the file.\nHaving maintained more than one website of HTML files by hand, I found Jekyll to be a revelation. Headers and footers can be included automatically on all pages set to a certain style. (I use this to define MathJax macros in one file that get copied into all the output question pages.) Content, such as an index or table of contents, can be generated programmatically based on properties of the data. There’s a nice step-by-step series for getting started with Jekyll on the ProfHacker blog.\nJekyll versus raw HTML is like using a power drill/driver versus the Craftsman screwdriver with the hard plastic handle that digs divots into your palm when there’s a job of any decent size. I’ll probably move my personal site this blog over to Jekyll at some point.\n","date":1517604896,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1517604896,"objectID":"3f43236dff301f102ddd48b88391be7d","permalink":"https://tobydriscoll.net/blog/jekyll-for-clicker-questions/","publishdate":"2018-02-02T20:54:56Z","relpermalink":"/blog/jekyll-for-clicker-questions/","section":"post","summary":"For a few years, I’ve been a fan of clickers (aka personal response systems) for large lecture sections. Clickers are a simple–and scalable–way to incorporate a little widespread active learning in the classroom.","tags":null,"title":"Jekyll for clicker questions","type":"post"},{"authors":["Kevin W Aiton","Tobin A Driscoll"],"categories":null,"content":"","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1514764800,"objectID":"100969f5219258e6cb2ad36312f5b7c1","permalink":"https://tobydriscoll.net/publication/aiton-adaptive-partition-unity-2018/","publishdate":"2019-06-06T14:48:50.019562Z","relpermalink":"/publication/aiton-adaptive-partition-unity-2018/","section":"publication","summary":"","tags":null,"title":"An adaptive partition of unity method for Chebyshev polynomial interpolation","type":"publication"},{"authors":["Tobin A Driscoll","Richard J Braun","Joseph K Brosch"],"categories":null,"content":"","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1514764800,"objectID":"0500fee248e606d1e75b8fb083bd6fe6","permalink":"https://tobydriscoll.net/publication/driscoll-simulation-parabolic-flow-2018/","publishdate":"2019-06-06T14:48:50.011787Z","relpermalink":"/publication/driscoll-simulation-parabolic-flow-2018/","section":"publication","summary":"","tags":null,"title":"Simulation of parabolic flow on an eye-shaped domain with moving boundary","type":"publication"},{"authors":null,"categories":["math"],"content":"I’m going to wrap up the long-paused MATLAB versus Julia comparison on Trefethen \u0026amp; Bau by chugging through all the lectures on iterative methods in one post.\nI’m back to using gists–not thrilled with any of the mechanisms for sharing this stuff.\nLecture 32 (sparse matrices and simple iterations) Lecture 33 (Arnoldi iteration) Lecture 34 (Arnoldi eigenvalues) These are remarkable mainly in that they have such striking similarity in both languages. Aside from square brackets and working around the 1x1/scalar distinction in Julia, little differs besides the syntax of the eigs command.\nOne frustration, though. I decided to try an interesting alternative to PyPlot in Julia, the Plots package. Actually Plots tries to be a generalization of and alternative route to using PyPlot/matplotlib. I decided to try the PlotlyJS backend instead, however. It makes lovely graphics with very responsive interaction. Since the rendering is in Javascript, I thought it would be perfectly portable, but you can’t see the output in the gist above, even though it should be embedded in the notebook.\nI liked using Plots OK; for the most part it’s just different, not better or worse that I could see. I found it awkward to work with subplots. I ended up creating 4 plots individually and then displaying them in a table using another call to plot. I find MATLAB’s setup more convenient. I also could not figure out how to coax a contour plot with a contour at a specified value, which seems like a big lack.\nLecture 35 (GMRES) Lecture 36 (Lanczos and MINRES) Lecture 37 (Conjugate gradients) Lecture 40 (Preconditioning) Again the differences are minor. In sparse and iterative methods I found Julia to place a greater emphasis on keyword arguments. For example,\n(xCG,~,~,~,resnorm) = cg(A,b,tol=1e-14,maxIter=100); There are default values for tol and maxIter, but if you want to override them you must type the keyword. On the other hand, MATLAB’s arguments are purely positional:\n[xCG,~,~,~,resnorm] = pcg(A,b,1e-14,100); If I wanted to specify the maximum number of iterations without changing the default tolerance, then I would need to use an empty matrix in the third position. When one uses a command that does take named parameters as inputs, it’s typically done using \u0026#39;propname\u0026#39;,propval pairs. Except when it isn’t, such as for ODEs and optimization. Confusing! As a user I don’t love typing out the keywords, but Julia at least lets me skip the quote marks. I also know from experience that Julia’s version is a lot easier and clearer to implement on the other side.\nSo that’s that. I feel that I am at least ready to get off the bunny slopes with Julia. I haven’t found a compelling reason to switch to it, aside from supporting open source software for science (no small thing). Of course I’ve barely scratched the surface. On the flip side, MATLAB has a lot of well-designed and -maintained packages, and its environment still makes a smoother experience for newcomers. If you can afford it, it’s still a great option for interactive numerical computing.\nI wonder about the future of Julia. Had Python not gotten a head start, I could see an outpouring of effort to make high-quality Julia packages and Julia being a complete MATLAB reboot. But numpy and scipy do exist, and despite their flaws, they have a huge first-mover advantage. It’s a snap to use Python packages in Julia, so there’s not a dichotomy here. But if the package you want to use a lot exists only in Python, the case for Julia weakens. Overall though, it’s a nice thing that we have several strong, expressive high-level environments for numerical computing. Happy coding!\n","date":1486152970,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1486152970,"objectID":"e0e9266890cd1f829814f5f8d006f9ae","permalink":"https://tobydriscoll.net/blog/trefethen-bau-matlab-julia-iterative-methods/","publishdate":"2017-02-03T20:16:10Z","relpermalink":"/blog/trefethen-bau-matlab-julia-iterative-methods/","section":"post","summary":"I’m going to wrap up the long-paused MATLAB versus Julia comparison on Trefethen \u0026 Bau by chugging through all the lectures on iterative methods in one post.\nI’m back to using gists–not thrilled with any of the mechanisms for sharing this stuff.","tags":null,"title":"Trefethen \u0026 Bau \u0026 MATLAB \u0026 Julia: Iterative methods","type":"post"},{"authors":["Joseph K Brosch","Ziwei Wu","Carolyn G Begley","Tobin A Driscoll","Richard J Braun"],"categories":null,"content":"","date":1483228800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1483228800,"objectID":"f2c3809d2de9714519d4e395300ee539","permalink":"https://tobydriscoll.net/publication/brosch-blink-characterization-using-2017/","publishdate":"2019-06-06T14:48:50.013564Z","relpermalink":"/publication/brosch-blink-characterization-using-2017/","section":"publication","summary":"","tags":null,"title":"Blink Characterization Using Curve Fitting and Clustering Algorithms","type":"publication"},{"authors":["Lloyd N Trefethen","Ásgeir Birkisson","Tobin A Driscoll"],"categories":null,"content":"","date":1483228800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1483228800,"objectID":"39ffd78e074c7609e874f83a7262bc0d","permalink":"https://tobydriscoll.net/publication/trefethen-exploring-od-es-2017/","publishdate":"2019-06-06T14:48:50.020572Z","relpermalink":"/publication/trefethen-exploring-od-es-2017/","section":"publication","summary":"","tags":null,"title":"Exploring ODEs","type":"publication"},{"authors":["Tobin A Driscoll","Richard J Braun"],"categories":null,"content":"","date":1483228800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1483228800,"objectID":"580b064e23d1496989e5f107a4d37bce","permalink":"https://tobydriscoll.net/publication/driscoll-fundamentals-numerical-computation-2017/","publishdate":"2019-06-06T14:48:50.025026Z","relpermalink":"/publication/driscoll-fundamentals-numerical-computation-2017/","section":"publication","summary":"","tags":null,"title":"Fundamentals of Numerical Computation","type":"publication"},{"authors":["Richard J Braun","Tobin A Driscoll","Carolyn G Begley","P Ewen King-Smith","Javed I Siddique"],"categories":null,"content":"","date":1483228800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1483228800,"objectID":"6b482f1812eeb994812ed032be5a1478","permalink":"https://tobydriscoll.net/publication/braun-tear-film-breakup-2017/","publishdate":"2019-06-06T14:48:50.010841Z","relpermalink":"/publication/braun-tear-film-breakup-2017/","section":"publication","summary":"","tags":null,"title":"On Tear Film Breakup (TBU): Dynamics and Imaging","type":"publication"},{"authors":null,"categories":["society and culture"],"content":"I’ve just finished one of the most remarkable fiction reading experiences I’ve had in quite some time: It Can’t Happen Here, by Sinclair Lewis.\nICHH is a satirical novel written and set in 1935 America. It describes the rise of a populist dictatorship modeled closely along the rise of the Nazis in Germany.(Lewis’ wife, Dorothy Thompson, was the first American journalist expelled from Nazi Germany and was clearly responsible for much of the shape of the book.)\nThis was near the height of the Depression, and FDR’s New Deal was controversial and, at that point unsuccessful (or not yet successful, if you want to look at it that way). There were multiple signs of unrest and populism, not least of which was Huey Long, then governor of Louisiana and apparently plotting to hijack the Democratic party to get elected President in 1936 or 1940. (Long was assassinated in 1935, as the book was being finished.)\nICHH is not great as a novel. The characters are essentially allegorical, and the plot barely needs them. The core of the book is as a dystopian speculation about the near future of the USA. Lewis himself called it “propaganda for American democracy.” As such, its relevance to 2016 is astonishing. I could pick out dozens of quotes. Here are just three extended ones.\n…what burns me up [isn’t] that old soap-boxer’s old chestnut about how one tenth of one percent of the population at the top have an aggregate income equal to 42 percent at the bottom….[It’s] the fact that even before this Depression, in what you folks called prosperous times, 7 per cent of all the families in the country earned $500 a year or less—remember, those weren’t the unemployed, on relief; those were the guys that still had the honor of doing honest labor.\nThe most confusing thing about the campaign of 1936 was the relationship of the two leading parties. Old-Guard Republicans were complaining that their proud party was begging for office, hat in hand; veteran Democrats that their traditional Covered Wagons were jammed with college professors, city slickers, and yachtsmen.\nMost Americans had learned in school that God had supplanted the Jews as chosen people by the Americans, and this time done the job much better, so that we were the richest, kindest, and cleverest nation living; that depressions were but passing headaches and that labor unions…must not set up an ugly class struggle by combining politically; that, though foreigners tried to make a bogus mystery of them, politics were really so simple that any village attorney or any clerk in the office of a metropolitan sheriff was quite adequately trained for them; and that if John D. Rockefeller or Henry Ford had set his mind to it, he could have become the most distinguished statesman, composer, physicist, or poet in the land.\nSo much is in the book: the rural/urban dynamic, the American disdain for and distrust of intellectualism, the cluelessness of intellectuals, racism, anti-Semitism, antifeminism, the lust for a “ringmaster-revolutionist”, the contrast between a boring, calculating candidate and a hot populist who draws big rallies, the failure of newspapers (i.e. the media in 1935), the use of radio for disintermediation (i.e., Twitter), the belief by the banking establishment that things would soon moderate and work in their favor, etc. Lewis also spells out the horrors of a concentration camp—familiar ground to us today, but sensational to much of the public in 1935.\nIn 1935 the bogeyman was communism, not Islam, and the threat seems to be the extreme left, not the right. But that hardly matters. What ICHH made so clear to me is how America, through its history, culture, and politics, is a host susceptible to a certain pattern of symptoms. And maybe it’s not just America, and not just liberal democracy, but literally part of our DNA.\nI’m quickly going over in my head in political science here. My reaction to the book is complicated. I recommend that you pick up a copy and at least get through the fictional election, though it’s neither easy nor fun to read.\nThe book was apparently adapted to a smash hit play in 1937. I would be surprised if it doesn’t undergo a revival in the near future.\n","date":1482074914,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1482074914,"objectID":"9f3a726122f442f2b2e142ead5ecaee4","permalink":"https://tobydriscoll.net/blog/it-already-has-happened-here/","publishdate":"2016-12-18T15:28:34Z","relpermalink":"/blog/it-already-has-happened-here/","section":"post","summary":"I’ve just finished one of the most remarkable fiction reading experiences I’ve had in quite some time: It Can’t Happen Here, by Sinclair Lewis.\nICHH is a satirical novel written and set in 1935 America.","tags":null,"title":"It already has happened here","type":"post"},{"authors":null,"categories":["computing","math","teaching"],"content":"Part V of T\u0026amp;B is on dense methods for eigenvalue and singular value problems. For my course, this is the part of the text that I condense most severely. In part that’s due to the need to cover unconstrained nonlinear solving and optimization stuff later on. But I also find that this is the least compelling part of the text for my purposes.\nIt’s heavily weighted toward the hermitian case. That’s the cleanest situation, so I see the rationale. But it’s pretty surprising that the lead author of Spectra and Pseudospectra mentions eigenvalue conditioning and sensitivity only in a single exercise! (The exercises not in the lecture named “Eigenvalue problems,” nor the one named “Overview of eigenvalue algorithms.” It’s under “Reduction to Hessenberg or tridiagonal form.”) In contrast with the tone of earlier parts of the book, one could study the methods of these sections thoroughly and yet not appreciate when the answers are inaccurate, or possibly irrelevant. Because I took this course from Trefethen at a crucial time in the development of his thinking on the subject, my perception of the issues behind computing eigenvalues is quite different from what the text itself conveys.\n(EDIT: If I had but read a few sections more before writing the above, I would have recalled that there is discussion about this in Lecture 34, under “A Note of Caution: Nonnormality.” It’s all laid out in clear language, so mea culpa. The ordering still feels a little awkward. I’ll probably have a half or full class period just on nonnormality.)\nSo. In my class I touched on 24-29, and you can find my related MATLAB notebooks and Julia notebooks on them. (I’ve given up on using Gists for these. The web interface can’t seem to handle having a lot of notebooks in one Gist, the rendering is slow, and I see no advantage for me beyond static HTML.) They’re a little rough in places, as it’s been challenging to keep up the pace.\nThere aren’t big MATLAB/Julia issues to report. If anything, I think Julia has cleaned up and rationalized some of the quirkiness of the MATLAB versions. In MATLAB, one uses eig for everything. The results depend on the number of output arguments.\n\u0026gt;\u0026gt; A = hilb(3); \u0026gt;\u0026gt; lambda = eig(A) lambda = 0.0027 0.1223 1.4083 \u0026gt;\u0026gt; [X,D] = eig(A) X = -0.1277 0.5474 0.8270 0.7137 -0.5283 0.4599 -0.6887 -0.6490 0.3233 D = 0.0027 0 0 0 0.1223 0 0 0 1.4083 It’s a bit awkward that the position of the eigenvalue output changes, and that it’s a vector in one case and a matrix in the other. And the difference goes beyond cosmetics: the calculation can be significantly faster if eigenvectors are not required. Julia gives you three variants, so you can retrieve exactly what you want.\njulia\u0026gt; A = [1/(i+j) for i=1:3, j=1:3]; julia\u0026gt; (λ,X) = eig(A) ([0.000646659,0.0409049,0.875115], [0.19925 -0.638787 -0.743136; ... -0.411255]) julia\u0026gt; λ = eigvals(A) 3-element Array{Float64,1}: 0.000646659 0.0409049 0.875115 julia\u0026gt; D = eigvecs(A) 3×3 Array{Float64,2}: 0.19925 -0.638787 -0.743136 -0.761278 0.376612 -0.527843 0.617053 0.670906 -0.411255 You even have eigmax and eigmin when the spectrum is real. One thing neither language gives you is an easy way to specify a sort order for the results. In MATLAB, for instance, one ends up doing things like:\n\u0026gt;\u0026gt; [X,D] = eig(A); \u0026gt;\u0026gt; lambda = diag(D); \u0026gt;\u0026gt; [~,idx] = sort(real(lambda)); \u0026gt;\u0026gt; X = X(:,idx); lambda = lambda(idx) lambda = -2.1898 + 1.4354i -2.1898 - 1.4354i 0.0301 + 0.6095i 0.0301 - 0.6095i 1.2276 + 2.2020i 1.2276 - 2.2020i 1.8278 + 0.0000i Meh. It’s not a lot better in Julia, as far as I can tell.\njulia\u0026gt; A = randn(7,7); julia\u0026gt; (λ,X) = eig(A); julia\u0026gt; idx = sortperm(real(λ)); julia\u0026gt; X = X[:,idx]; λ = λ[idx] 7-element Array{Complex{Float64},1}: -3.38359+0.0im -2.33084+0.233909im -2.33084-0.233909im 0.415007+0.0im 1.03098+0.0im 1.11426+2.34596im 1.11426-2.34596im Altogether, Julia is feeling less like a foreign country and more like a province. Sometimes I even remember to use square brackets on the first try.\n","date":1477577799,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1477577799,"objectID":"014a50e6e887295be8a48e20a869be1e","permalink":"https://tobydriscoll.net/blog/trefethen-bau-matlab-julia-lectures-24-29-eigenvalue-stuff/","publishdate":"2016-10-27T14:16:39Z","relpermalink":"/blog/trefethen-bau-matlab-julia-lectures-24-29-eigenvalue-stuff/","section":"post","summary":"Part V of T\u0026B is on dense methods for eigenvalue and singular value problems. For my course, this is the part of the text that I condense most severely. In part that’s due to the need to cover unconstrained nonlinear solving and optimization stuff later on.","tags":null,"title":"Trefethen \u0026 Bau \u0026 MATLAB \u0026 Julia, Lectures 24-29: Eigenvalue stuff","type":"post"},{"authors":null,"categories":["computing","teaching"],"content":"Three in one this time: Lecture 20, which is on Gaussian elimination / LU factorization, Lecture 21, on row pivoting, and Lecture 23, on Cholesky factorization. I mainly skipped over Lecture 22, about the curious case of the stability of pivoted LU, but the main example is dropped into the end of my coverage of pivoting.\nThe Julia surprises are, not surprisingly, coming less frequently. In Lecture 20 I had some fun with rational representations. I like using MATLAB’s format rat when presenting Gaussian elimination, as it allows me to recall the way the process looks when learned by hand. It’s a fun trick, but of course the underlying values are still all double precision, and the rational approximations to them are found ex post facto. By contrast, Julia offers true rational numbers, constructed and shown using the // operation.\nCompare the MATLAB\nformat rat I = eye(4); L21 = I + (-5/17)*I(:,2)*I(:,1)\u0026#39;; L31 = I + (-9/17)*I(:,3)*I(:,1)\u0026#39;; L41 = I + (-4/17)*I(:,4)*I(:,1)\u0026#39;; to the Julia\nI = eye(Rational,4); L21 = copy(I); L21[2,1] = -5//17; L31 = copy(I); L31[3,1] = -9//17; L41 = copy(I); L41[4,1] = -4//17; The MATLAB code requires only the format call, because it’s only the display of results that is affected. The Julia code is doing something deeper and needs more changes as a result.\nJulia could use something like a format command. I almost always find MATLAB’s terminal output more readable, or at least easier to manipulate into a good form. Here’s one example using the rational output. First, MATLAB:\n17 2 3 13 93 0 194/17 155/17 71/17 963/17 0 101/17 92/17 87/17 574/17 0 230/17 243/17 -18/17 1158/17 And the Julia:\n4x5 Array{Rational{T\u0026amp;lt;:Integer},2}: 17//1 2//1 3//1 13//1 93//2 0//1 194//17 155//17 71//17 963//34 0//1 101//17 92//17 87//17 287//17 0//1 230//17 243//17 -18//17 579//17 I almost never need that header line that Julia gives. The numbers are already showing themselves to be Rational, and the shape of the array is self-evident. (Though I now see that MATLAB 2016b is adding such headers to non-float output.) The zero structure also jumps out more clearly in the MATLAB case, though it’s profligate with whitespace.\nAnother comparison, of MATLAB (using the default format):\n1 0 0 0 0 1 0 1 0 0 0 2 0 0 1 0 0 4 0 0 0 1 0 8 0 0 0 0 1 16 0 0 0 0 0 32 versus Julia:\n6×6 Array{Float64,2}: 1.0 0.0 0.0 0.0 0.0 1.0 0.0 1.0 0.0 0.0 0.0 2.0 0.0 0.0 1.0 0.0 0.0 4.0 0.0 0.0 0.0 1.0 0.0 8.0 0.0 0.0 0.0 0.0 1.0 16.0 0.0 0.0 0.0 0.0 0.0 32.0 There’s nothing wrong per se about Julia’s. But which version would you write down, or expect to see in print? One last case, of a matrix that is supposed to be triangular but for a little roundoff. First, Julia:\n4×4 Array{Float64,2}: 17.0 2.0 3.0 13.0 0.0 13.5294 14.2941 -1.05882 0.0 0.0 -2.93913 5.06957 5.55112e-16 0.0 -4.44089e-16 4.09024 And MATLAB, using the default format:\n17.0000 2.0000 3.0000 13.0000 0 13.5294 14.2941 -1.0588 0 0 -2.9391 5.0696 0.0000 0 -0.0000 4.0902 Julia has chosen to align on the decimal point. It’s also suppressing trailing zeros, except for the first, giving an odd and false impression of values that have a precise number of significant digits. MATLAB’s choice of right alignment is visually superior, and only exact zero gets a special display. True, you might want that exponential notation for the tiny values; you can get it by changing the format.\n\u0026gt;\u0026gt; format short e \u0026gt;\u0026gt; U U = 1.7000e+01 2.0000e+00 3.0000e+00 1.3000e+01 0 1.3529e+01 1.4294e+01 -1.0588e+00 0 0 -2.9391e+00 5.0696e+00 5.5511e-16 0 -4.4409e-16 4.0902e+00 \u0026gt;\u0026gt; format short g \u0026gt;\u0026gt; U U = 17 2 3 13 0 13.529 14.294 -1.0588 0 0 -2.9391 5.0696 5.5511e-16 0 -4.4409e-16 4.0902 It’s nice to have options.\n","date":1477153215,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1477153215,"objectID":"c32f3a8fd2634ad2f758eff11a182cd0","permalink":"https://tobydriscoll.net/blog/trefethen-bau-matlab-julia-lectures-20-21-23-solving-square-systems/","publishdate":"2016-10-22T16:20:15Z","relpermalink":"/blog/trefethen-bau-matlab-julia-lectures-20-21-23-solving-square-systems/","section":"post","summary":"Three in one this time: Lecture 20, which is on Gaussian elimination / LU factorization, Lecture 21, on row pivoting, and Lecture 23, on Cholesky factorization. I mainly skipped over Lecture 22, about the curious case of the stability of pivoted LU, but the main example is dropped into the end of my coverage of pivoting.","tags":null,"title":"Trefethen \u0026 Bau \u0026 MATLAB \u0026 Julia: Lectures 20, 21, 23: Solving square systems","type":"post"},{"authors":null,"categories":["computing","math","teaching"],"content":"Here are the notebooks in MATLAB and Julia.\nThe new wrinkle in these codes is extended precision. In MATLAB you need to have the Symbolic Math toolbox to do this in the form of vpa. In Julia, you have to use version 0.5 or (presumably) later, which had a surprising side effect I’ll get to below.\nThe reason for extended precision is that this lecture presents experiments on the accuracy of different algorithms for linear least squares problems. In order to demonstrate this on a fairly ill conditioned problem, the answer is supposed to be computed in extended precision, yielding a normalization constant that sets the desired quantity to be 1 for at least 16 significant digits.\nThe least squares problem comes from fitting exp(sin(4t)) to a polynomial of degree 14. I see two ways to define how extended precision is to be used. Option (1) is to form the matrix $A$ and the vector $b$ in double precision, then solve the least squares problem with them, but in extended precision. Option (2) is to build in extended precision from the beginning of the problem, creating $A$ and $b$ that differ in the extended digits. I was first attracted to option (1), but option (2) has the clear advantage that the result should be independent of machine and language, whereas in the other case the data could be rounded or computed differently to double precision.\nHere’s how this looks in MATLAB.\nt = vpa(0:m-1,64)\u0026#39;/vpa(m-1,64); % 64 sig. digits! A = t.^0; for j = 1:14, A=[A,t.*A(:,j)]; end b = exp(sin(4*t)); [Q,R] = qr(A,0); % Householder QR x1 = R\\ (Q\u0026#39;*b); [Q,R] = mgs([A b]); % Gram-Schmidt QR x2 = R(1:15,1:15) \\ R(1:15,16); Here are the outputs for the last element of x in the four methods:\n2006.7874531048518338761038143559 2006.7874531048518338761038143553 2006.7874531048518338766907539159 2006.7874531048518338761038143555 It’s not a problem that the third result disagrees in the last 10 or so digits, since that’s an unstable method.\nHere’s how it went in Julia.\nsetprecision(BigFloat,128); # use 128-bit floats t = convert(Array{BigFloat},collect(0:m-1))/convert(BigFloat,m-1); A = [t[i].^j for i=1:m, j=0:n-1]; b = exp(sin(4*t)); (Q,R) = qr(A); x1 = R\\ (Q\u0026#39;*b); (Q,R) = mgs([A b]); x2 = R[1:15,1:15] \\ R[1:15,16]; x3 = (A\u0026#39;*A)$$A\u0026#39;*b); x4 = A\\b; That first line isn’t pretty, but after that it’s quite natural. I found Juila’s extended precision to be fast compared to MATLAB’s. The results:\n2.006787453104851833876103814338068195207e+03 2.006787453104851833876103814355358077263e+03 2.006787453104851834342923924263804001505e+03 2.006787453104851833876103814376793404332e+03 These are the same up to the last couple of digits of MATLAB’s answer. Unfortunately, my values don’t agree with what’s in T\u0026amp;B, which is 2006.787453080206. The text doesn’t say much about how this was done, so it’s impossible for me to say why.\nI probably don’t pay enough attention to extended precision. I know some people in the radial basis function community who use it to overcome the very poor conditioning of those bases. They seem quite happy with it. It’s always felt like cheating to me, but that’s hardly a rational argument.\nAbove I said that there was an unexpected side effect related to my using extended precision in Julia. I discovered that (a) it became available in base Julia in version 0.5 and (b) the homebrew Julia I had installed was version 0.4.3, even though 0.5 had apparently been out for a while. Upon upgrading, I found that my MGS routine throwing an error! The offending line was\nA[:,j+1:n] -= Q[:,j]*R[j,j+1:n]; The issue is that now both of the references on the right-hand side are vectors, which have only one dimension. Therefore the implied outer product is considered undefined. I had to switch to\nA[:,j+1:n] -= Q[:,j:j]*R[j:j,j+1:n]; Because j:j is a range, not a scalar, the submatrix references are two-dimensional matrices with appropriate singleton dimensions, so the outer product proceeds.\nI’m not sure how to feel about this. It’s disturbing to extract a row of a matrix and get an object without a row shape. In fact you can even say it’s got a column shape, because you are allowed to transpose it into a 1-by-n matrix! On the other hand, there are consistent rules governing the indexing, and 0D, 1D, and 2D extractions are all possible. I’m starting to think that the true problem is that I learned and conceptualize linear algebra in a way that works up to dimension 2 but contains some implied hacks that break multilinear algebra. I wish I knew this stuff better.\n","date":1476220595,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1476220595,"objectID":"ba4134ee61c9e378a7d58eea96666e26","permalink":"https://tobydriscoll.net/blog/trefethen-bau-matlab-julia-lecture-19-stability-of-least-squares/","publishdate":"2016-10-11T21:16:35Z","relpermalink":"/blog/trefethen-bau-matlab-julia-lecture-19-stability-of-least-squares/","section":"post","summary":"Here are the notebooks in MATLAB and Julia.\nThe new wrinkle in these codes is extended precision. In MATLAB you need to have the Symbolic Math toolbox to do this in the form of vpa.","tags":null,"title":"Trefethen \u0026 Bau \u0026 MATLAB \u0026 Julia: Lecture 19, Stability of least squares","type":"post"},{"authors":null,"categories":["computing","teaching"],"content":"I’ve run into trouble managing gists with lots of files in them, so I’m back to doing one per lecture. Here are Lecture 12 and Lecture 13.\nWe’ve entered Part 3 of the book, which is on conditioning and stability matters. The lectures in this part are heavily theoretical and often abstract, so I find a little occasional computer time helps to clear the cobwebs.\nRight off the top, in reproducing Figure 12.1, I ran right into the trap I worried about in my last post regarding polynomials in Julia. In MATLAB, the polynomial coefficients are just a plain vector. That makes perturbing them trivial:\np = poly([1,1,1,0.4,2.2]); % polynomial with these roots q = p + 1e-9*randn(size(p)); % perturb its coefficients In Julia, you can use the Polynomials package and get polynomial objects. Behold:\nusing Polynomials p = poly([1,1,1,0.4,2.2]); # polynomial with these roots q = p + Poly(1e-9*randn(6)); # perturb coefficients Note that poly constructs a polynomial from a vector of roots, while Poly constructs one from a vector of coefficients. Sure enough, I used poly in both lines the first time around. It’s a pernicious mistake, because it produces no error—the polynomials can be added no matter what. The mistake was mine, but I think this is an unfortunate design.\nThe only other notable usage in Lecture 12 is my first use of a comprehension:\nhilb(n) = [ 1.0/(i+j) for i=1:n, j=1:n ]; This is a pretty handy way to create a matrix.\nIn Lecture 13 I had some fun dissecting floating point numbers in both systems. There was only one area in which Julia didn’t go as smoothly as I would hope. MATLAB offers realmin and realmax , which give the smallest and largest normalized floating point numbers. While Julia has similar-sounding commands, they are interpreted differently:\njulia\u0026gt; typemin(Float64), typemax(Float64) (-Inf,Inf) Eh, not so much. There is even one more layer of subtlety. Consider\njulia\u0026gt; (prevfloat(Inf),nextfloat(0.0)) (1.7976931348623157e308,5.0e-324) The first of these values is exactly the same as realmax, but the second is not realmin. IEEE 754 double precision has “denormalized” numbers that let you trade away bits of precision to get closer to zero in magnitude. Julia is reporting the smallest denormalized number, not the smallest full-precision number. Julia’s not wrong, but access to the extreme finite double precision values isn’t as straightforward as it could be.\nOne last observation. Trefethen \u0026amp; Bau refer to the value $2^{-53}$ as “machine epsilon.” This isn’t what MATLAB and Julia use, which is $2^{-52}$. Nick Higham’s Accuracy and Stability of Numerical Algorithms also has “machine epsilon” at $2^{-52}$ and calls $2^{-53}$ “unit roundoff.” Stoer and Bulirsch (2nd ed.) call $2^{-53}$ “machine precision.” Corless and Fillion seem to agree with Higham. Golub and Van Loan (3rd ed.) don’t use “machine epsilon” at all, and in the index one finds\nMachine precision. See unit roundoff.\nSigh. The mathematical uses are, unsurprisingly, consistent. Frankly, I feel better about my personal inconsistencies at using those terms: at least I stood on the shoulders of giants.\n","date":1475603877,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1475603877,"objectID":"aff98fbdd5328e39302c200658bc5b98","permalink":"https://tobydriscoll.net/blog/trefethen-bau-matlab-julia-lectures-12-13-conditioning-and-floating-point/","publishdate":"2016-10-04T17:57:57Z","relpermalink":"/blog/trefethen-bau-matlab-julia-lectures-12-13-conditioning-and-floating-point/","section":"post","summary":"I’ve run into trouble managing gists with lots of files in them, so I’m back to doing one per lecture. Here are Lecture 12 and Lecture 13.\nWe’ve entered Part 3 of the book, which is on conditioning and stability matters.","tags":null,"title":"Trefethen \u0026 Bau \u0026 MATLAB \u0026 Julia, Lectures 12-13: Conditioning and floating point","type":"post"},{"authors":null,"categories":["computing","teaching"],"content":"This week’s notebooks (MATLAB and Julia–now all lectures are together for each language) are about least squares polynomial fitting.\nThe computational parts are almost identical, except for how polynomials are represented. In MATLAB, a vector of coefficients is interpreted as a polynomial in the context of particular functions, such as polyval. The major pain is that the convention is for the coefficients to be ordered from high degree to low, which is almost always the opposite of what you really want. Hence I’ve gotten used to writing code like\np = @(x) polyval( c(end: -1:1), x-1955 ); It’s not a big deal, but it trips up some students every semester.\nJulia has a full-fledged polynomial type, if you care to add and load the package. And, it expects ordering from the constant term to the highest degree. So I came up with\np = Poly(c); q = t -\u0026gt; p(t-1955); Simple enough, but I find two disappointments. First, it’s a bare-bones class. For instance, the second object q above is also a polynomial, but we’ll never know it formally, or be able to get its coefficients. A shiftvar method or something similar would be nice. Second, in the effort to clone the MATLAB interface, a potential for serious confusion was introduced. The command p=poly(c) also works, but (like MATLAB’s counterpart) constructs a polynomial whose roots, not coefficients, are given. This is way too easy a mistake to make.\nAnother element this time was that I tried using the nascent Plots package for Julia. It’s an interesting attempt to graft a graceful interface onto the various graphics backends that already exist. I was motivated to try it because AFAIK, the PyPlots package lacks a counterpart to fplot from MATLAB. Perhaps in part because of my time with the Chebfun project, I have been putting more emphasis in my teaching on representing functions as such, rather than implicitly as vectors of numbers. It bothers me now, for example, that functions such as interp1 and ode45 return numbers or structures rather than callable functions, which is what their algorithms should be doing in the deep sense.\nAnyhow, I end up using fplot a lot because of my emphasis on functions, and couldn’t find a counterpart in PyPlot. In Plots, however, the plot command handles both numerical and functional arguments alike. Here’s a snippet from the notebook:\np = Poly(c); plot( t-\u0026gt;p(t-1955), 1955,2000 ) plot!( year,anomaly, m=:o,l=nothing ); title!(\u0026#34;World temperature anomaly\u0026#34;); xlabel!(\u0026#34;year\u0026#34;); ylabel!(\u0026#34;anomaly (deg C)\u0026#34;) Not bad! You can see a couple of quirks though. One is the use of keyword arguments in line 3; the arguments m=:o and l=nothing respectively set the point markers to circles and the lines connecting points to be suppressed. This takes getting used to, but it’s memorable and compact enough.\nThe other quirk that you see above is the use of the banged commands like plot! and title!. The bang in Julia is a convention meaning “operate in place” or “overwrite existing.” By default, the MATLAB-like commands replace the existing plot, so they have to be banged in order to build on top of it instead. This is a bit dubious in the case of titles and labels––why would I create a new plot by issuing a title?––but it is at least consistent, and, unlike the global state used in MATLAB by the hold command, works the same regardless of context and history.\nOne quirk––to me, a bug––that you don’t see is that the default in Plots is that every plot creates or adds to a legend. I’m not a big fan of plot legends in most contexts, but you’re welcome to them if you like them. However, I don’t find it reasonable to have one forced on me for a graph with a single curve that I didn’t give a label to! I turned off this travesty by starting off with\nusing Plots; pyplot(legend=false); which at least is straightforward, though entangled with my choice of backend.\n","date":1475068756,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1475068756,"objectID":"3243adb13e5fe5e3f9b3356b31b3a162","permalink":"https://tobydriscoll.net/blog/trefethen-bau-matlab-julia-lecture-11-least-squares/","publishdate":"2016-09-28T13:19:16Z","relpermalink":"/blog/trefethen-bau-matlab-julia-lecture-11-least-squares/","section":"post","summary":"This week’s notebooks (MATLAB and Julia–now all lectures are together for each language) are about least squares polynomial fitting.\nThe computational parts are almost identical, except for how polynomials are represented.","tags":null,"title":"Trefethen \u0026 Bau \u0026 MATLAB \u0026 Julia, Lecture 11: Least squares","type":"post"},{"authors":null,"categories":["Uncategorized"],"content":"For today’s notebooks I got caught on a problem I anticipated in theory but failed to spot in practice for longer than I would like to admit.\nFirst let me mention how interesting this Lecture is to me personally. The title of the lecture is “MATLAB”, and it details three numerical experiments. The first of these uses QR factorization of a discretization of monomials in order to approximate the Legendre polynomials. I skipped this one here because I opted in class to show how Gram-Schmidt looks using Chebfun. (It’s awesome.)\nThe other two numerical experiments show different aspects of numerical instability of the Gram-Schmidt algorithm, classical and modified. The MATLAB version looks just like I would have written it 20 years ago:\n[U,S,V] = svd(randn(80)); s = 2.^(-1👎-80); A = U*diag(s)*V\u0026#39;; semilogy(s,\u0026#39;.\u0026#39;) [Qc,Rc] = gs(A); \u0026amp;nbsp;% classical hold on, semilogy(diag(Rc),\u0026#39;o\u0026#39;) [Qm,Rm] = mgs(A); % modified semilogy(diag(Rm),\u0026#39;s\u0026#39;) The idea is that the diagonal elements of R descend exponentially just like the singular values do. If you run this code (or peek at the link at the top), you see that MGS stops tracking them right around machine precision, whereas the less stable classical version wanders off at about half of the available digits.\nI did introduce my own wrinkle here. I can’t believe I haven’t thought of using this for teaching before, but by the conversion A=single(A) I can simulate a different value of machine epsilon without changing anything else! It backs up the observations from the first graph.\nIn Julia this gambit ran into a big snag. Here was my first code for MGS:\nfunction mgs(A) m,n = size(A); Q = zeros(m,n); R = zeros(n,n); for j = 1:n R[j,j] = norm(A[:,j]); Q[:,j] = A[:,j]/R[j,j]; R[j,j+1:n] = Q[:,j]\u0026#39;*A[:,j+1:n]; A[:,j+1:n] -= Q[:,j]*R[j,j+1:n]; end return Q,R end Everything was fine in double precision. After a couple of missteps, I figured out how to make `A`` single precision:\nA = convert(Array{Float32},A) Not beautiful, but it works. However, while it had the desired effect on MGS, it did nothing to classical GS! It finally came down to a surprise:\njulia\u0026gt; typeof( 1.0f0 + 1.0f0 ) Float32 julia\u0026gt; typeof( 1.0f0 + 1.0 ) Float64 A single plus a double is double. The rule in Julia is that the operands are converted to a type that can represent them both. MATLAB gives a different outcome, converting both numbers to single:\n\u0026gt;\u0026gt; class( single(1) + 1 ) ans = single I suppose the philosophy here is that there’s no point padding the numbers with meaningless digits—the moment you introduce a single precision value, you’ve chosen that level of precision. I think that’s the more sensible choice for floating point; Julia is concerned with the consistency of its much more intricate and far-reaching type system. For Julia I changed the initialization of Q and R to\nQ = zeros(A); R = zeros(Q[1:n,1:n]); That way they are initialized with the correct type in either case.\nNow for the bonehead move of the day. I seemed to get inconsistent and nonreproducible results in the single precision cases. I went away, did other things, came back into a fresh session, and…no difference between double and single precision. I may have said a few things I now come to regret. Finally I remembered the key: Julia passes by reference, not value. MGS alters the input matrix, which has no effect outside the function in MATLAB but changes the ‘master copy’ in Julia. A little switch to\nfunction mgs(B) A = copy(B); and all was well. This is an example of how much MATLAB has shaped my thinking about programming. IIRC, MATLAB doesn’t always pass by value; if an input argument is not altered, it is not copied. But it’s handled by the compiler, not the programmer.\nIf nothing else I’m getting ever more clarity on the ways MATLAB keeps things simple. Variables are bound to their values, period. Single precision is an irrevocable choice. Scalars and 1x1 matrices are the same thing. Don’t it always seem to go that you don’t know what you’ve got ’til it’s gone?\n","date":1474401154,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1474401154,"objectID":"7e7e43974e2db96962d7cb980c063257","permalink":"https://tobydriscoll.net/blog/trefethen-bau-matlab-julia-lecture-9-matlab/","publishdate":"2016-09-20T19:52:34Z","relpermalink":"/blog/trefethen-bau-matlab-julia-lecture-9-matlab/","section":"post","summary":"For today’s notebooks I got caught on a problem I anticipated in theory but failed to spot in practice for longer than I would like to admit.\nFirst let me mention how interesting this Lecture is to me personally.","tags":null,"title":"Trefethen \u0026  Bau \u0026   MATLAB \u0026   Julia, Lecture 9: MATLAB","type":"post"},{"authors":null,"categories":["computing","math","teaching"],"content":"This lecture is about the modified Gram-Schmidt method and flop counting. The notebooks are here.\nI’m lost.\nAlmost as an afterthought I decided to add a demonstration of the timing of Gram-Schmidt compared to the asymptotic flop count. Both MATLAB and Julia got very close to the trend as got into the hundreds, using vectorized code:\nn_ = collect(50:50:500); time_ = zeros(size(n_)); for k = 1:length(n_) n = n_[k]; A = rand(1200,n); Q = zeros(1200,n); R = zeros(600,600); tic(); R[1,1] = norm(A[:,1]); Q[:,1] = A[:,1]/R[1,1]; for j = 2:n R[1:j-1,j] = Q[:,1:j-1]\u0026#39;*A[:,j]; v = A[:,j] - Q[:,1:j-1]*R[1:j-1,j]; R[j,j] = norm(v); Q[:,j] = v/R[j,j]; end time_[k] = toc(); end using PyPlot loglog(n_,time_,\u0026#34;-o\u0026#34;,n_,(n_/500).^2,\u0026#34;--\u0026#34;) xlabel(\u0026#34;n\u0026#34;), ylabel(\u0026#34;elapsed time\u0026#34;) I noticed that while the timings were similar, Julia lagged MATLAB just a bit. I decided this would be a great chance for me to see Julia’s prowess with speedy loops firsthand.\nCompare the vectorized and unvectorized Julia versions here:\nLook at the last line–it’s allocating 1.4GB of memory to make the nested loop version happen! I thought perhaps I should use copy to create v in each pass, but that change didn’t help. I even tried writing my own loop for computing the dot product, to no avail.\nIt did help a little to replace the line in which v is updated with\nv = broadcast!(-,v,Q[:,i]*R[i,j]) The bang on the name of the function makes it operate in-place, overwriting the current storage. Apparently Julia will create some syntactic sugar for this maneuver in version 0.5. Here it reduced the memory usage to 1.1 GB.\nJulia’s reputation is that it’s great with loops, especially compared to MATLAB and Python. As a Julia newbie I recognize that there may still be only a small change I need to make in order to see this for myself. But I feel as though having to use that broadcast!, or even the more natural .= that may be coming, is already too much to ask. I’m frustrated, confused, and disappointed.\n","date":1474314282,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1474314282,"objectID":"6f1940a24bd7229cf5c1419751d9b335","permalink":"https://tobydriscoll.net/blog/trefethen-bau-matlab-julia-lecture-8-gram-schmidt/","publishdate":"2016-09-19T19:44:42Z","relpermalink":"/blog/trefethen-bau-matlab-julia-lecture-8-gram-schmidt/","section":"post","summary":"This lecture is about the modified Gram-Schmidt method and flop counting. The notebooks are here.\nI’m lost.\nAlmost as an afterthought I decided to add a demonstration of the timing of Gram-Schmidt compared to the asymptotic flop count.","tags":null,"title":"Trefethen \u0026 Bau \u0026 MATLAB \u0026 Julia, Lecture 8: Gram-Schmidt","type":"post"},{"authors":null,"categories":["teaching","computing"],"content":"Here are the Jupyter notebooks for Lecture 6 and Lecture 7. (I finally noticed that a Gist can hold more than one notebook…duh.)\nNot much happened in Lecture 6, but I got gobsmacked in Lecture 7. It happened when I tried to convert this boring MATLAB code for backward substitution.\nA = magic(9); b = (1:9)\u0026#39;; [Q,R] = qr(A); z = Q\u0026#39;*b; x(9,1) = z(9)/R(9,9); for i = 8👎1 x(i) = (z(i) - R(i,i+1:9)*x(i+1:9)) / R(i,i); end Here is what I first tried in Julia.\nA = round(10*rand(9,9)); b = (1:9); m = 9; (Q,R) = qr(A); z = Q\u0026#39;*b; x = zeros(m); x[m] = z[m]/R[m,m]; for i = m-1👎1 x[i] = (z[i] - R[i,i+1:m]*x[i+1:m]) / R[i,i]; end Seems straightforward, but line 4 gives an error. I’m not going to copy the error message here, in case you’re using mobile data right now. What I mean is that it is verbose, not to mention obscure. You don’t appreciate simple, clear error messages until you get something else!\nAnyhow, I then remembered that in Julia, the colon construction (1:9) produces a Range, not a Vector. As I understand it, Julia embraces a lazy design philosophy: it avoids evaluation of an expression until the last possible moment. Suppose the only use of that Range is to describe a loop iteration—in that case, why have a vector?\nI’m all for lazy philosophy. (Haw haw!) It’s not clear to me why the context Q\u0026#39;*b does not automatically convert the Range into a Vector. It’s even less clear why they have deprecated the idiom [1:9] to create a Vector; it works for now but gives a warning. Instead one should use collect:\nA = round(10*rand(9,9)); b = collect(1:9); m = 9; (Q,R) = qr(A); z = Q\u0026#39;*b; x = zeros(m); x[m] = z[m]/R[m,m]; for i = m-1👎1 x[i] = (z[i] - R[i,i+1:m]*x[i+1:m]) / R[i,i]; end Feels very odd to me still, but okay.\nWe are not out of the woods yet. This version still fails in the loop body, again vomiting opaque error messages. Remember how, back in Lecture 2, I mentioned that scalars and 1x1 matrices are different things? Inside the loop above, z[i] is a scalar and the product is a length-1 vector. But the subtraction works anyway, as z[i] is silently promoted to a 1-vector also. No, the problem comes with the assignment: you can’t assign a 1-vector to an element of an array of numbers.\nThere’s a very long (space and time) discussion about this and related issues in Julia. Suffice it to say that what mathematicians do with scalars, vectors, matrices, and tensors isn’t rigorously consistent—or at least, there seem to be multiple, incompatible rigorous ways to use them.\nIn this particular case I have found two unsatisfying workarounds. The idiom x[i:i] produces a Vector, not a scalar, so the assignment goes through. Or we can work on the other side of the assignment and pull out the scalar from the vector:\n(z[i] - R[i,i+1:m]*x[i+1:m])[1] / R[i,i] Now, it’s pleasing that this syntax does work, as there is no good MATLAB equivalent for indexing into a temporary expression. I just wish it was in the service of something less dismal.\nAgain: Julia’s designers have solid reasons for doing things this way. I wouldn’t consider it a dealbreaker for research codes, but this episode is not something I would want to explain to undergrads who are just wrapping their heads around LU factorization. It pulls you right out of thinking about math and into thinking about strict-typing, pinhead-dancing angels. How unfortunate.\n","date":1474057678,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1474057678,"objectID":"450e6f7aa5d76673923950a7b6309a36","permalink":"https://tobydriscoll.net/blog/trefethen-bau-matlab-julia-lectures-6-7/","publishdate":"2016-09-16T20:27:58Z","relpermalink":"/blog/trefethen-bau-matlab-julia-lectures-6-7/","section":"post","summary":"Here are the Jupyter notebooks for Lecture 6 and Lecture 7. (I finally noticed that a Gist can hold more than one notebook…duh.)\nNot much happened in Lecture 6, but I got gobsmacked in Lecture 7.","tags":null,"title":"Trefethen \u0026 Bau \u0026 MATLAB \u0026 Julia, Lectures 6-7","type":"post"},{"authors":null,"categories":["computing","teaching"],"content":"Notebooks are viewable for matlab and julia.\nThis is one of my favorite demos. It illustrates low-rank approximation by the SVD to show patterns in voting behavior for the U.S. Congress. With no a priori models, project onto two singular vectors and pow–meaning and insight jump out.\nI took one shortcut. I have a MATLAB script that reads the raw voting data from voteview.com and converts it to a matrix. No doubt I would learn a lot about I/O in Julia if I translated it, but I got short on time and instead saved it locally from MATLAB. Then load it using the MAT package for Julia and Bob’s your uncle.\nI did stumble into a nasty gotcha, though. I decided to make histograms for the distributions of the “partisan” and “bipartisan” coordinate values. Unfortunately, there’s a name clash: MATLAB’s best known histogram plotter is called hist, but Julia has a built-in function by that name that just bins the data. I knew there was also a hist() in PyPlot, but to my bafflement the access for it was not PyPlot.hist(), which does exist:\nhelp?\u0026gt; PyPlot.hist hist(v, e) -\u0026amp;gt; e, counts Compute the histogram of v using a vector/range e as the edges... hist(v[, n]) -\u0026amp;gt; e, counts Compute the histogram of v, optionally using approximately... This is Julia’s built-in function. The next thing I tried was typing in Pyplot. and hitting tab for a list of completions. Most of the familiar MATLAB-style plotting functions are there, but no hist, just hist2D, which is not equivalent. I don’t remember now where I found it, but the way to call the function I want is the bizarre plt[:hist]. Neither ?plt nor tab completion gives any whiff of this syntax or possibility. Obviously there’s some logic at work here, and no doubt my Julia and Python ignorance are showing, but this was the most frustrating Julia experience I’ve had yet.\n(Ironically, MATLAB has a newer plotting function called histogram, which does not seem to conflict with any Julia names!)\n","date":1473709628,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1473709628,"objectID":"be53c1b00217209e7b8f5f587b016d1b","permalink":"https://tobydriscoll.net/blog/trefethen-bau-matlab-julia-lecture-5-more-on-the-svd/","publishdate":"2016-09-12T19:47:08Z","relpermalink":"/blog/trefethen-bau-matlab-julia-lecture-5-more-on-the-svd/","section":"post","summary":"Notebooks are viewable for matlab and julia.\nThis is one of my favorite demos. It illustrates low-rank approximation by the SVD to show patterns in voting behavior for the U.S. Congress.","tags":null,"title":"Trefethen \u0026 Bau \u0026 MATLAB \u0026 Julia Lecture 5: More on the SVD","type":"post"},{"authors":null,"categories":["computing","math","teaching"],"content":"The notebooks: matlab and julia.\nToday is about some little conveniences/quirks in Julia. Starting here:\nt = linspace(0,2*pi,300); x1,x2 = (cos(t),sin(t)); The second line assigns to two variables simultaneously. It’s totally unnecessary here, but it helps to emphasize how the quantities are related.\nNext we have\nU,σ,V = svd(A) I’m unreasonably happy about having Greek letters as variable names. Just type in ‘\\sigma’ and hit tab, and voila! It’s a reminder of how, in the U.S. at least, we’re so used to living within the limitations of ancient 128-character ASCII—telegraphs, really—that we can be surprised by expanded possibilities.\nLater on we have diagm(σ). In MATLAB, the diag function has two roles: convert a vector to a diagonal matrix, and extract the diagonal elements of a matrix. This creates a curious edge case for MATLAB: for example, diag([1 2 3]) returns a 3-by-3 matrix, not the single element 1. This is almost always what you want, but I’ve run into gotchas wherein a program works perfectly until an input of the ‘wrong’ size silently changes the behavior of a function. In Julia the two functionalities are separated into diag and diagm, which avoids the edge case ambiguity. I think it’s worth the clarity here to have the extra command.\nThe one thing I missed having in the Julia version was MATLAB’s format command, which lets you set the default display of numbers in all following output. In this notebook I just had numbers as placeholders and really wanted just to show shapes and sizes. Julia’s full-length output obfuscates the sizes quite a bit, and I’d like to tell it to calm down with all those digits for a little while (rather than saying so with each new output). If that capability is there, I overlooked it.\n","date":1473684667,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1473684667,"objectID":"82717c1f85bcc8231d16767dfc0a43b9","permalink":"https://tobydriscoll.net/blog/trefethen-bau-matlab-julia-lecture-4-svd/","publishdate":"2016-09-12T12:51:07Z","relpermalink":"/blog/trefethen-bau-matlab-julia-lecture-4-svd/","section":"post","summary":"The notebooks: matlab and julia.\nToday is about some little conveniences/quirks in Julia. Starting here:\nt = linspace(0,2*pi,300); x1,x2 = (cos(t),sin(t)); The second line assigns to two variables simultaneously. It’s totally unnecessary here, but it helps to emphasize how the quantities are related.","tags":null,"title":"Trefethen \u0026 Bau \u0026 MATLAB \u0026 Julia, Lecture 4: SVD","type":"post"},{"authors":null,"categories":["computing","math","teaching"],"content":"Here are the MATLAB and julia notebooks.\nThe big issue this time around was graphics. This topic dramatically illustrates the advantages on both sides of the commercial/open source fence. On the MATLAB side, it’s perfectly clear what you should do. There are many options that have been well constructed, and it’s all under a relatively consistent umbrella. There are things to learn and options to choose, but it’s clear what functions you will be using to make, say, a scatter plot, and a lot of similarity across commands.\nJulia graphics are another story. At this writing, there are two options recommended on Julia’s official page about plotting packages: PyPlot and Gadfly. It doesn’t take much exploration to decide that the former is favored by MATLAB veterans and the latter, by R devotees. Confusingly, the general download page for Julia mentions a third package called Plots that is supposed to integrate all of the backends. It’s still early days for Julia, and I’m sure much remains in flux.\nMoreover, because you can (quite easily) import and run Python code in Julia, in principle you have access to all Python plotting packages. One of the big players is matplotlib, which is more or less what Julia’s PyPlot is supposed to provide. But there are also Bokeh, plotly, and pyqtgraph—for all I know, many more besides. All of these can make gorgeous graphics, often highly interactive and even hosted in the cloud. The relative merits are not at all clear.\nHere we run into the paradox of choice: having many options, even good ones, can provoke anxiety rather than satisfaction. Which package do I invest time in learning? MATLAB limits choice but provides a sort of editorial, almost paternal, reassurance.\nMy personal goal is to learn Julia from the standpoint of a MATLAB user, so PyPlot it is. All in all, the transition isn’t bad, though there are some twists.\nIn the last few years I’ve been more often turning to automatic function plotting in MATLAB, using fplot, ezsurf, and ezcontour. If PyPlot supports those, I have yet to find out about them. So it’s back to the world of evaluating functions on tensor product grids. A MATLAB veteran turns to meshgrid, but Julia supports broadcasting across singleton dimensions. For example:\nusing PyPlot x = linspace(-1,1,90); y = x\u0026#39;; contour(x[:],y[:],sqrt(x.^2 .+ y.^2))\u0026lt;/pre\u0026gt; Because x has a column shape while y has a row shape, the .+ operator broadcasts each along the “missing” dimension. It’s a clever shortcut once you know it. It works just as well for contours of the vector 1-norm, but for the max norm I had to broadcast manually:\ncontour(x[:],y[:],broadcast(max,abs(x),abs(y))) It’s not clear to me why that broadcast should not happen automatically, given that max is a dedicated elementwise operator.\nThere’s more Julia subtlety hiding in this notebook, but those issues will wait for another time.\n","date":1473276766,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1473276766,"objectID":"02695ff484236802faaa143d0150e042","permalink":"https://tobydriscoll.net/blog/trefethen-bau-matlab-julia-lecture-3-norms/","publishdate":"2016-09-07T19:32:46Z","relpermalink":"/blog/trefethen-bau-matlab-julia-lecture-3-norms/","section":"post","summary":"Here are the MATLAB and julia notebooks.\nThe big issue this time around was graphics. This topic dramatically illustrates the advantages on both sides of the commercial/open source fence. On the MATLAB side, it’s perfectly clear what you should do.","tags":null,"title":"Trefethen \u0026 Bau \u0026 MATLAB \u0026 Julia, Lecture 3: Norms","type":"post"},{"authors":null,"categories":["computing","math","teaching"],"content":"Here are the matlab and julia notebooks.\nTwo things stood out this time. First, consider the following snippet.\nu = [ 4; -1; 2+2im ] v = [ -1; 1im; 1 ] println(\u0026#34;dot(u,v) gives \u0026#34;, dot(u,v)) println(\u0026#34;u\u0026#39;*v gives \u0026#34;,u\u0026#39;*v) The result is\ndot(u,v) gives -2 - 3im u\u0026#39;*v gives Complex{Int64}[-2 - 3im] Unlike in MATLAB, a scalar is not the same thing as a 1-by-1 matrix. This has consequences. The code (u\u0026#39;*v)*eye(3) throws a dimension mismatch error, while the equivalent with dot is fine. In the strict sense this is correct, and I suppose Julia made a decision to be strict in contrast to MATLAB’s typical laxity. The price is that little bump introduced into a transition that is normally seamless in the minds of users and programmers 99% of the time.\nThe other difference is in style more than anything else. Compare MATLAB’s\n[Q,~] = qr(A); to Julia’s\nQ = qr(A)[1] Julia’s version would be easier if you wanted to extract the $n$th output, where $n$ is a variable, though you could manage it in MATLAB with cells. I’m not sure how common that situation is. Also, it could be a surprise in MATLAB that\nQ=qr(A) does not do the same thing, because the content and meaning of the outputs depend on the number of outputs.\nA distinction for QR factorization in particular in the two languages is that MATLAB returns the full version by default, while Julia defaults to the skinny form. The latter is nice because an unsuspecting student (or professor) who calls qr(A) in MATLAB for a really tall matrix might as well kill the process and restart MATLAB Julia makes you do something extra to get the memory-dangerous version.\n","date":1472843574,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1472843574,"objectID":"09e0520fd29610dd13eb6c1b00cea225","permalink":"https://tobydriscoll.net/blog/trefethen-bau-matlab-julia-lecture-2/","publishdate":"2016-09-02T19:12:54Z","relpermalink":"/blog/trefethen-bau-matlab-julia-lecture-2/","section":"post","summary":"Here are the matlab and julia notebooks.\nTwo things stood out this time. First, consider the following snippet.\nu = [ 4; -1; 2+2im ] v = [ -1; 1im; 1 ] println(\"dot(u,v) gives \", dot(u,v)) println(\"u'*v gives \",u'*v) The result is","tags":null,"title":"Trefethen \u0026 Bau \u0026 MATLAB \u0026 Julia, Lecture 2","type":"post"},{"authors":null,"categories":["computing","teaching"],"content":"Have a look at the MATLAB and Julia versions of the notebooks for this lecture.\nThe first disappointment in Julia comes right at the start: no magic command in Julia! Why not? I love demonstrating with magic square matrices:\nThey are instantly familiar or at least understandable to any level of mathematician. They have integer entries and thus display compactly. You can demonstrate sum, transpose, and diag naturally. And getting the “antidiagonal” sum is a nice exercise. The even-sized ones are singular. They have the memorable eigenvector $[1,;1,; \\cdots; 1]$. What a shame. I substitute random matrices, which sacrifices some reproducibility. At least the same code would work in MATLAB.\nAnother gotcha comes in line 2: if you create a vector with all integer entries, they are stored as integers. Famously, in MATLAB every number is a complex float unless you specifically declare it otherwise. Julia’s approach is standard in computer science, and there are excellent practical reasons for using it. Nor is it difficult to force Julia to use floats. Nevertheless the issue illustrates one of the subtle ways that MATLAB caters to those who are immersed in scientific computing, where pure integer results are rare.\nNext up is a simple but significant change in the syntax: square brackets [ ] for indexing of matrices and vectors. In MATLAB parentheses () serve both this purpose and to make function calls. Julia makes sense to me here. It makes this expression unambiguous:\nF( [1 2 3] ) In MATLAB this could be an access to the first three elements of an array F, or (the Julia meaning) a call to a function F with a vector passed as the first argument. I can’t think of a reason to have those different actions be expressed identically. I imagine the clash would complicate parsing code, but that’s an area I know nothing about.\nFrom here things settle down. Julia wants me to say 1im rather than 1i or 1j for the imaginary unit; fine. And I must remember to use spaces to separate columns in a matrix construction or concatenation. I often use commas for this in MATLAB. I’m a little confused because commas are used to create tuples in Julia, so I would have expected\nx = [ 1, 2, 3 ] to create (if anything) an array whose single element is the tuple 1,2,3. Instead I get a column vector with entries 1, 2, and 3, which, while a lot more useful, was a small surprise to this newbie.\nEnumerating the differences like this makes the experience sound far more frustrating than I found it to be. It’s more like driving a car with a different-feeling clutch than going from an automatic to a manual transmission.\nAnd I really appreciate the Jupyter notebooks! More on them versus the MATLAB Publisher and new Live Editor another time.\n","date":1472759768,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1472759768,"objectID":"bd83800dd5173fa193e46630b5eb7680","permalink":"https://tobydriscoll.net/blog/trefethen-bau-lecture-1/","publishdate":"2016-09-01T19:56:08Z","relpermalink":"/blog/trefethen-bau-lecture-1/","section":"post","summary":"Have a look at the MATLAB and Julia versions of the notebooks for this lecture.\nThe first disappointment in Julia comes right at the start: no magic command in Julia! Why not?","tags":null,"title":"Trefethen \u0026 Bau, Lecture 1","type":"post"},{"authors":null,"categories":["math","computing","teaching"],"content":"This semester I’m teaching MATH 612, which is numerical linear and nonlinear algebra for grad students. Linear algebra dominates the course, and for that I’m following the now classic textbook by Trefethen \u0026amp; Bau. This book has real meaning to me because I learned the subject from Nick Trefethen at Cornell, just a year or two before the book was written. It’s when numerical analysis became an appealing subject to me.\nThat course is also when I started to learn MATLAB. I’ve been using MATLAB for over 20 years and I’m damn good at it. I’ve written a book that teaches it, and another book largely based on a software package I wrote for conformal mapping, and I was an early and key contributor to the Chebfun project. I even dominated a game of MATLAB Jeopardy as a grad student at the 1995 MATLAB Conference (when version 4.2 of MATLAB ruled the Earth).\n(It isn’t quite contemporary, but the 1996 home page for the Cornell Center for Applied Mathematics has a banner graphic created in MATLAB—by yours truly.)\nThe tl;dr is that MATLAB has dominated my professional life since that course. It’s still a great tool to use for that course, too—in my mind, learning the theory and learning the numerics are inextricable. In the context of computing, it’s incredible to have a 25-year winning streak!\nBut while the pedagogical value remains as high as ever, MATLAB is a smaller part of the “desktop scientific computing” landscape than it was. It’s still a behemoth, but there are more good options than ever. For some time I have felt neglectful toward options that are similar but different, namely SciPy and Julia. I’ve picked up bits and pieces of them, but not enough to do any serious work.\nThus I’ve decided to learn Julia the same way I did MATLAB: by using it as we cover elementary numerical linear algebra. The students will still get MATLAB, but I’ll be doing Julia in parallel. For each lecture (chapter) of Trefethen \u0026amp; Bau, I’ll make two Jupyter notebooks with identical text and two versions of the codes. I’m not rewriting T\u0026amp;B, just trying to illustrate some of the concrete ideas and conclusions in each lecture. I’m sure my early Julia efforts will be cringeworthy to the cognoscenti, but just as with learning a human language, you have to risk sounding stupid for a while in order to start sounding less stupid. If I can keep up the pace, I’ll blog about what I learn about porting to Julia with each new notebook.\n","date":1472756225,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1472756225,"objectID":"8b638f58e568e10dce38b95731e74430","permalink":"https://tobydriscoll.net/blog/trefethen-bau-via-matlab-and-julia/","publishdate":"2016-09-01T18:57:05Z","relpermalink":"/blog/trefethen-bau-via-matlab-and-julia/","section":"post","summary":"This semester I’m teaching MATH 612, which is numerical linear and nonlinear algebra for grad students. Linear algebra dominates the course, and for that I’m following the now classic textbook by Trefethen \u0026 Bau.","tags":null,"title":"Trefethen \u0026 Bau, via MATLAB and Julia","type":"post"},{"authors":["Lan Zhong","Christiaan F Ketelaar","Richard J Braun","Tobin A Driscoll","Peter Ewen King-Smith","Carolyn G Begley"],"categories":null,"content":"","date":1451606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1451606400,"objectID":"9544ce66031d87047e63455358120978","permalink":"https://tobydriscoll.net/publication/zhong-mathematical-modeling-glob-driven-2016/","publishdate":"2019-06-06T14:48:50.026535Z","relpermalink":"/publication/zhong-mathematical-modeling-glob-driven-2016/","section":"publication","summary":"","tags":null,"title":"Mathematical Modeling of Glob-Driven Tear Film Breakup","type":"publication"},{"authors":["Tobin A Driscoll","Endre Süli","Alex Townsend"],"categories":null,"content":"","date":1451606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1451606400,"objectID":"128f283c1a3d037330eeb95d3a347165","permalink":"https://tobydriscoll.net/publication/driscoll-new-directions-numerical-2016/","publishdate":"2019-06-06T14:48:50.022122Z","relpermalink":"/publication/driscoll-new-directions-numerical-2016/","section":"publication","summary":"","tags":null,"title":"New Directions in Numerical Computation","type":"publication"},{"authors":["Joseph Brosch","Tobin Driscoll","Richard Braun"],"categories":null,"content":"","date":1451606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1451606400,"objectID":"1542a46ff3d8a89888f3aec86b73e8ee","permalink":"https://tobydriscoll.net/publication/brosch-simulation-thin-film-2016/","publishdate":"2019-06-06T14:48:50.009212Z","relpermalink":"/publication/brosch-simulation-thin-film-2016/","section":"publication","summary":"","tags":null,"title":"Simulation of Thin Film Equations on an Eye-Shaped Domain with Moving Boundary","type":"publication"},{"authors":null,"categories":["math","society and culture"],"content":"Something fun for Friday?\nMy older son binge-watched Futurama on Netflix a few months ago. This was one of the funniest shows of at least recent TV history. Especially if you like nerdy, cultural-reference, rapid-fire style humor like a real Gen-Xer.\nIt’s also probably the first and only time in television history that a new mathematical theorem was proved for and first presented in a series episode. The whole run of the series had numerous mathematical references. This may have something to do with the fact that co-creator and writer Ken Keeler has a PhD in applied math from Harvard.\n","date":1438359100,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1438359100,"objectID":"1b866407dba148c1cade327c0917e130","permalink":"https://tobydriscoll.net/blog/why-not-zoidberg/","publishdate":"2015-07-31T16:11:40Z","relpermalink":"/blog/why-not-zoidberg/","section":"post","summary":"Something fun for Friday?\nMy older son binge-watched Futurama on Netflix a few months ago. This was one of the funniest shows of at least recent TV history. Especially if you like nerdy, cultural-reference, rapid-fire style humor like a real Gen-Xer.","tags":null,"title":"Why not Zoidberg?","type":"post"},{"authors":null,"categories":["computing","matlab"],"content":"I just scratched a MATLAB itch. So many times I’ve seen—and experienced myself—people popping open figure windows in MATLAB, then trying to juggle them and move them around the screen so that you can see all of them at once. If you know what you’re doing, you can dock them into the desktop and lay them out there, but it’s still a lot of clicks.\nSo, I present showall.m, a little function that will automatically bring forward all the figures (or the ones you specify) and lay them out in a grid. Now you can master your figures!\n","date":1438290891,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1438290891,"objectID":"6c296071db7e11e14de3b3cb480f031a","permalink":"https://tobydriscoll.net/blog/showall/","publishdate":"2015-07-30T21:14:51Z","relpermalink":"/blog/showall/","section":"post","summary":"I just scratched a MATLAB itch. So many times I’ve seen—and experienced myself—people popping open figure windows in MATLAB, then trying to juggle them and move them around the screen so that you can see all of them at once.","tags":null,"title":"showall","type":"post"},{"authors":null,"categories":["academia","math","teaching"],"content":"I just received a copy of SIAM News on a dead tree. It features a piece by Chris Johnson and Hans de Sterck about “Data Science: What Is It and How Is It Taught?” As usual in these articles, I find the specifics more interesting than the generalities of a panel discussion. I really liked this bit about the new program in Computational Modeling and Data Analytics at Virginia Tech:\nIn a sense, creating such a program offers the opportunity to rethink curricula on classical topics like calculus that have at many institutions not seen substantial change throughout most of the past century.\nThis! Well outside the context of data science, too.\nI’m so sick of teaching calculus as though it were still 1960. Not that calculus has changed, of course, but what we need from it has been utterly transformed. In the age of computing, knowledge of calculus is more useful for posing the right questions—as opposed to getting answers to mindless exercises that can be done in seconds on Wolfram Alpha. Don’t even get me started on teaching series convergence tests to engineering freshmen.\nAs far as how to teach data science…let me figure out how to learn it, first. I’m intrigued by this repository as a start.\nThanks to @kzawadz for the infographic. Covered by Creative Commons A/NC/SA license. ","date":1438263393,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1438263393,"objectID":"ea44ed67c280f5ffe6d1074654d39e87","permalink":"https://tobydriscoll.net/blog/data-science-data-science/","publishdate":"2015-07-30T13:36:33Z","relpermalink":"/blog/data-science-data-science/","section":"post","summary":"I just received a copy of SIAM News on a dead tree. It features a piece by Chris Johnson and Hans de Sterck about “Data Science: What Is It and How Is It Taught?","tags":null,"title":"Data science? Data science!","type":"post"},{"authors":null,"categories":["academia","math"],"content":"Nick Trefethen has posted a wonderful graph showing how the average length of papers published in several SIAM journals has doubled over the last 40 years.\n","date":1438181047,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1438181047,"objectID":"f73cb2c30a71bd31cbe5fe9e59cce295","permalink":"https://tobydriscoll.net/blog/length-of-papers/","publishdate":"2015-07-29T14:44:07Z","relpermalink":"/blog/length-of-papers/","section":"post","summary":"Nick Trefethen has posted a wonderful graph showing how the average length of papers published in several SIAM journals has doubled over the last 40 years.","tags":null,"title":"Length of papers","type":"post"},{"authors":null,"categories":["science"],"content":"I’m a little late getting this news, but I’m fascinated by an experiment at Australian National University showing (once again) in a vivid way how strange the quantum mechanical world is.\nThe experiment was a variation on the celebrated double slit experiment that shows how photons are both particles and waves, at least in some interpretations of the universe. That’s freakish in a not-news kind of way, as is the fact that the same is true of good old atoms, which might seem more as though they should stay particular all the time.\nOne amusing view of the ANU experiment is that an atom can “decide” to be either particle-like or wave-like based on information from the future. Just like the restaurant at the end of the universe, that is, of course, impossible.\nIf I were a better physicist I could explain this to you, but in all honesty it was just the lack of intuitiveness about high energy physics (and maybe the contemporaneous demise of the Superconducting Super Collider) that turned me off to the subject as an undergraduate. Still, what a universe to live in, eh Horatio?\n","date":1437700005,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1437700005,"objectID":"61384fb6af99ae3ec20d77a1ffa9ad96","permalink":"https://tobydriscoll.net/blog/quantum-weirdness/","publishdate":"2015-07-24T01:06:45Z","relpermalink":"/blog/quantum-weirdness/","section":"post","summary":"I’m a little late getting this news, but I’m fascinated by an experiment at Australian National University showing (once again) in a vivid way how strange the quantum mechanical world is.","tags":null,"title":"Quantum weirdness","type":"post"},{"authors":null,"categories":["math","teaching"],"content":"I recommend the post What I Wish I Had Learned More About in College Mathematics, written by Sabrina Schmidt, a former math undergrad at Vassar who now works as a data manager. My favorite quote:\nI wish that I had been introduced earlier and more often to applications, as they would have provided me with a better idea of potential areas of specialization after graduation.\nShe goes on to mention PageRank (which I usually cover in my numerical computation courses) as an application of linear algebra, and e-commerce as an application of number theory. She also has other STEM courses, statistics, and computer science on her wish list for her former self.\nGood read.\n","date":1437575324,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1437575324,"objectID":"1a9737be7d22cc17c0cc62b7bd2d4c79","permalink":"https://tobydriscoll.net/blog/a-retrospective-look-at-college-math/","publishdate":"2015-07-22T14:28:44Z","relpermalink":"/blog/a-retrospective-look-at-college-math/","section":"post","summary":"I recommend the post What I Wish I Had Learned More About in College Mathematics, written by Sabrina Schmidt, a former math undergrad at Vassar who now works as a data manager.","tags":null,"title":"A retrospective look at college math","type":"post"},{"authors":null,"categories":["teaching"],"content":"In June I attended a MathWorks faculty research summit in Boston. The idea was to bring together academics and industry reps. As one of the very few non-engineers, it didn’t give me much fodder for research. But there was a parallel session for educators with a couple of crossover sessions. I spoke in one of those about what I have learned from flipping the classroom in my numerical computation course. You can view the slides online.\nThe executive summary: Connecting with students in person is the main thing separating me from a MOOC. Major challenges in this particular course are the wide variety of backgrounds of the students, and material that spans advanced mathematics as well as some skill with computer coding. My goal is to teach how to bridge the two, to become fluent enough in both types of thinking to at least know when to go the experts and what to ask. Flipping lets students have time to fill in soft spots in their knowledge while absorbing new material, and to get help from me and their peers while they wrestle with putting new ideas into practice. I have no data on whether they do better in this style of class. (They believe they do a bit better, though like it a bit less.) But I know that I am more engaged, and so I’m giving them the best that I have to offer.\n","date":1437400001,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1437400001,"objectID":"9323d79a024ad98a18575910dc1b243b","permalink":"https://tobydriscoll.net/blog/flipping-experiences/","publishdate":"2015-07-20T13:46:41Z","relpermalink":"/blog/flipping-experiences/","section":"post","summary":"In June I attended a MathWorks faculty research summit in Boston. The idea was to bring together academics and industry reps. As one of the very few non-engineers, it didn’t give me much fodder for research.","tags":null,"title":"Flipping experiences","type":"post"},{"authors":null,"categories":["teaching"],"content":"In keeping with my post on how grades in a course affect student motivation, I’ve been pondering alternatives to the classic mean-them-and-mean-it model.\nAll of my family members have spent time studying karate. (I’m a brown belt, FYI, which is like an A.B.D.) One thing I’ve always liked about the dojos I’ve known is how the belt promotion system works. It’s what I would now call a mastery based learning concept. Students are tested to advance to the next belt when they are ready, regardless of time spent in the system (of course there are practical limitations on the speed of progression). The tests themselves are rigorous but the results are typically foregone conclusions, by design.\nTruly self-paced mastery learning is difficult to fit into the college grading model. With a technology assist it’s possible in topics like pre-calculus and at least some calculus, and probably a few other introductory courses I’m not familiar with. I don’t see how I could do it in my advanced course this fall.\nI could also think of a more corporate model, which is where most of the students will end up. So the first few weeks would be like an interview to determine the initial job rank (i.e., final grade). Based on performance I would give personal feedback and update their ranks accordingly throughout the term. This goes hand in hand with continuous assessment, which I plan to do anyway.\nBecause the later material in part builds on earlier concepts, I could argue that progress later on could make up for early struggles. In any case students would be free to fight for grade promotions to the very end of the course. Unlike the karate model, demotions are possible, so they couldn’t reach an acceptable level and just lay back.\nA radical realization of this concept would include doing away with the numerical grades on each assignment! I admit, that excites me—I can’t stand the arbitrariness of deciding how many “points” each mistake is worth. I see no reason why a grading rubric can’t be precise without being applied quantitively.\nThis would be a huge culture shift for me and for the students. It’s risky. I’d love to hear opinions and experiences trying to do this sort of thing in math.\n","date":1437140343,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1437140343,"objectID":"80833a48018bc745b7ea1dcb66a1326d","permalink":"https://tobydriscoll.net/blog/promotion-system/","publishdate":"2015-07-17T13:39:03Z","relpermalink":"/blog/promotion-system/","section":"post","summary":"In keeping with my post on how grades in a course affect student motivation, I’ve been pondering alternatives to the classic mean-them-and-mean-it model.\nAll of my family members have spent time studying karate.","tags":null,"title":"Promotion system","type":"post"},{"authors":null,"categories":["teaching"],"content":"Grading is weird in so many ways. In the U.S. system, we report a “letter” grade that is basically an integer from 0 to 10 or so. This value appears on the student’s transcript without comment or context, which is an inherently meaningless way to present any data.\nBut the raw value itself isn’t well defined anyway. When I give a student a C+ in calculus, does it mean that she mastered about 75% of the major topics in the course? Or does it mean that she understands about 3/4 of what is going on in any particular topic? Which of these is preferable? Would a C+ in bicycle riding be enough of a prerequisite to learn how to ride a motorcycle?\nThe closest analog to grades in the real world that I can think of is the annual or quarterly performance review. There are doubts being expressed about these too. In a piece on Bloomberg Business, long-time management consultant Aubrey Daniels says, “It’s a sadistic process for what purpose I don’t know….Think of a sports team: A coach doesn’t wait until the end of a season to give his players feedback.” So, we’re coming back around to continuous assessment.\nYet the form of the assessment needs to change too.\nWhat motivates people in the workplace? For one thing, being recognized for their successes. In math we tend to view perfection as the standard, and everything that falls short on homework or exams earns deductions. This is a notably dismal and discouraging viewpoint for learners. It emphasizes the negativity of errors both large and small. When you compare the (hopefully!) flawless and polished solutions on the answer key with your own stumbling attempts, how could you feel anything but foolish? Where is the upside?\nAnother thing that motivates us in the real world is a chance to fix our failures. If you’ve scored badly on two midterms in a calculus course, you’re probably wise to invest your effort elsewhere. The chances of pulling yourself out of the muck are small, in part because averages are heartless and have perfect memory. I always have disdained grading methods that forgive early bad scores or give “extra” credit chances, but I have to admit that a system that makes recovery from a bad start seem impossible is no way to maintain motivation.\nI don’t have answers yet, but I’m thinking about some things. More later.\n","date":1436883785,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1436883785,"objectID":"3b347fa18572f8174c8ec4840da3276b","permalink":"https://tobydriscoll.net/blog/grades-and-motivation/","publishdate":"2015-07-14T14:23:05Z","relpermalink":"/blog/grades-and-motivation/","section":"post","summary":"Grading is weird in so many ways. In the U.S. system, we report a “letter” grade that is basically an integer from 0 to 10 or so. This value appears on the student’s transcript without comment or context, which is an inherently meaningless way to present any data.","tags":null,"title":"Grades and motivation","type":"post"},{"authors":null,"categories":["math"],"content":"So here I am at the Delaware Bio Breakfast. Nobody is more surprised than I! Making a career out of math seems like an odd path to trying to improve human health, but here I sit.\n","date":1436875203,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1436875203,"objectID":"610affa58652eec41468422be4530716","permalink":"https://tobydriscoll.net/blog/bio-breakfast/","publishdate":"2015-07-14T12:00:03Z","relpermalink":"/blog/bio-breakfast/","section":"post","summary":"So here I am at the Delaware Bio Breakfast. Nobody is more surprised than I! Making a career out of math seems like an odd path to trying to improve human health, but here I sit.","tags":null,"title":"Bio breakfast","type":"post"},{"authors":null,"categories":["math","teaching"],"content":"I’ve come to think that in math at least, continuous learning and assessment may be more important even than [http://www.crlt.umich.edu/tstrategies/tsal](active learning). The traditional model of chunking assessments into weekly or monthly batches encourages the cram-and-dump style of “learning.” Since students are allowed to delay work on assignments that are crucial to their understanding of incoming material, it’s impossible for them to build that understanding in real time. Instead they copy and hope to parse later, when assessment is demanded.\nIt’s tempting to say that students should suck it up and organize their time better. This attitude ignores human nature, especially the nature of people in late adolescence and early adulthood. Even a large part of my own work is deadline-driven rather than proactive. And I love math!\nAny big change in expectations encounters resistance. Fortunately, breaking through that resistance sometimes spills over into breaking resistance to the tough job of learning itself. The trick is doing so in a way that feels fair to the students and manageable to the instructor. It’s hard to overthrow everything at once.\nHere’s what I’m thinking for my fall course on numerical computing. Each class meeting (3 times a week) has a cycle associated with it:\nBefore class:\n(them) Read/watch and reflect. (them) Take an online quiz on the new material. In class: 3. (mostly me) Review problem spots. Fill in some of the details. 4. (us) Work to produce one graph or one table relevant to the new material. 5. (them) Turn in a description of what is still not clear.\nAfter class: 6. (me) While everything is fresh, I take one last try at explaining material that is still confusing. 7. (them) Do a couple of homework problems. Before the next meeting, for full credit; before the following meeting, for partial credit.\nAs you can tell, this is a lot of work for everyone, and–by design–it’s not flexible. To compensate, I won’t give exams. There will be some group projects for summative assessments instead.\n","date":1436801146,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1436801146,"objectID":"bd9301d6f6cf33f99f96d01bcc4467c4","permalink":"https://tobydriscoll.net/blog/making-continuous-assessment-work/","publishdate":"2015-07-13T15:25:46Z","relpermalink":"/blog/making-continuous-assessment-work/","section":"post","summary":"I’ve come to think that in math at least, continuous learning and assessment may be more important even than [http://www.crlt.umich.edu/tstrategies/tsal](active learning). The traditional model of chunking assessments into weekly or monthly batches encourages the cram-and-dump style of “learning.","tags":null,"title":"Making continuous assessment work","type":"post"},{"authors":null,"categories":["math"],"content":"Last week my 14-year-old son asked rhetorically, “How is it that more people aren’t addicted to math?”\nI know son, I know.\n","date":1436480240,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1436480240,"objectID":"6bf972831503416348cb4b2d92698960","permalink":"https://tobydriscoll.net/blog/addiction/","publishdate":"2015-07-09T22:17:20Z","relpermalink":"/blog/addiction/","section":"post","summary":"Last week my 14-year-old son asked rhetorically, “How is it that more people aren’t addicted to math?”\nI know son, I know.","tags":null,"title":"Addiction","type":"post"},{"authors":["Lan Zhong","CF Ketelaar","RJ Braun","TA Driscoll","PE King-Smith","Carolyn G Begley"],"categories":null,"content":"","date":1420070400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1420070400,"objectID":"5df1446654c0b292102fa50f26c0a1dd","permalink":"https://tobydriscoll.net/publication/zhong-model-problem-blob-driven-2015/","publishdate":"2019-06-06T14:48:50.004779Z","relpermalink":"/publication/zhong-model-problem-blob-driven-2015/","section":"publication","summary":"","tags":null,"title":"A Model Problem for Blob-Driven Tear Film Breakup (TBU)","type":"publication"},{"authors":["Tobin Driscoll"],"categories":null,"content":"","date":1420070400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1420070400,"objectID":"e8794c2f1583e74558dea4765a659e8f","permalink":"https://tobydriscoll.net/publication/driscoll-open-source-software-2015/","publishdate":"2019-06-06T14:48:50.002741Z","relpermalink":"/publication/driscoll-open-source-software-2015/","section":"publication","summary":"","tags":null,"title":"An Open Source Software Project for Numerical Conformal Mapping","type":"publication"},{"authors":["Longfei Li","Richard J Braun","Tobin A Driscoll","William D Henshaw","Jeffrey W Banks","P Ewen King-Smith"],"categories":null,"content":"","date":1420070400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1420070400,"objectID":"0fc9e0e0b87efac4c402dd0d1a82efef","permalink":"https://tobydriscoll.net/publication/li-computed-tear-film-2015/","publishdate":"2019-06-06T14:48:50.001626Z","relpermalink":"/publication/li-computed-tear-film-2015/","section":"publication","summary":"","tags":null,"title":"Computed Tear Film and Osmolarity Dynamics on an Eye-Shaped Domain","type":"publication"},{"authors":["Michael Stapf","Richard Braun","Carolyn Begley","Tobin Driscoll","Peter Ewen King-Smith"],"categories":null,"content":"","date":1420070400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1420070400,"objectID":"e8a058382f83ed501a317afa0559c3f8","permalink":"https://tobydriscoll.net/publication/stapf-modeling-tear-film-2015/","publishdate":"2019-06-06T14:48:50.003818Z","relpermalink":"/publication/stapf-modeling-tear-film-2015/","section":"publication","summary":"","tags":null,"title":"Modeling Tear Film Evaporation and Breakup with Duplex Films","type":"publication"},{"authors":["Tobin A Driscoll","Nicholas Hale"],"categories":null,"content":"","date":1420070400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1420070400,"objectID":"e6f65ea73a573c0acce9f327ad2c6e61","permalink":"https://tobydriscoll.net/publication/driscoll-rectangular-spectral-collocation-2015/","publishdate":"2019-06-06T14:48:49.982561Z","relpermalink":"/publication/driscoll-rectangular-spectral-collocation-2015/","section":"publication","summary":"","tags":null,"title":"Rectangular spectral collocation","type":"publication"},{"authors":["RJ Braun","Longfei Li","William Henshaw","Tobin Driscoll","PE King-Smith"],"categories":null,"content":"","date":1420070400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1420070400,"objectID":"05f6bfcc962102f756fbb73aa7007071","permalink":"https://tobydriscoll.net/publication/braun-solute-dynamics-imaging-2015/","publishdate":"2019-06-06T14:48:50.007305Z","relpermalink":"/publication/braun-solute-dynamics-imaging-2015/","section":"publication","summary":"","tags":null,"title":"Solute Dynamics and Imaging in the Tear Film on an Eye-Shaped Domain","type":"publication"},{"authors":["Christiaan Ketelaar","Lan Zhong","RJ Braun","TA Driscoll","PE King-Smith","CG Begley"],"categories":null,"content":"","date":1420070400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1420070400,"objectID":"2aa9e11848871b0c9825e65d8742b53a","permalink":"https://tobydriscoll.net/publication/ketelaar-tear-film-dynamics-2015/","publishdate":"2019-06-06T14:48:50.005795Z","relpermalink":"/publication/ketelaar-tear-film-dynamics-2015/","section":"publication","summary":"","tags":null,"title":"Tear Film Dynamics Around a Rigid Model Blob","type":"publication"},{"authors":["Tobin A Driscoll","Nicholas Hale","Lloyd N Trefethen"],"categories":null,"content":"","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1388534400,"objectID":"6f4957a09aad35a0c209fa50e10510f6","permalink":"https://tobydriscoll.net/publication/driscoll-chebfun-guide-2014/","publishdate":"2019-06-06T14:48:49.995801Z","relpermalink":"/publication/driscoll-chebfun-guide-2014/","section":"publication","summary":"","tags":null,"title":"Chebfun Guide","type":"publication"},{"authors":["Michael McCulloch","Lei Chen","Gilberto Schleiniger","Tobin Driscoll"],"categories":null,"content":"","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1388534400,"objectID":"8cfcfc5eb6463c633d931126b05730cd","permalink":"https://tobydriscoll.net/publication/mcculloch-datadrivenmathematical-2014/","publishdate":"2019-06-06T14:48:49.999077Z","relpermalink":"/publication/mcculloch-datadrivenmathematical-2014/","section":"publication","summary":"","tags":null,"title":"DATA DRIVEN MATHEMATICAL MODELING OF THE SINGLE VENTRICLE ANATOMY AND PHYSIOLOGY","type":"publication"},{"authors":["Quan Deng","RJ Braun","Tobin A Driscoll"],"categories":null,"content":"","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1388534400,"objectID":"15310bb5661cb4937b141f7f17cfca4e","permalink":"https://tobydriscoll.net/publication/deng-heat-transfer-tear-2014/","publishdate":"2019-06-06T14:48:49.992283Z","relpermalink":"/publication/deng-heat-transfer-tear-2014/","section":"publication","summary":"","tags":null,"title":"Heat Transfer and Tear Film Dynamics over Multiple Blink Cycles","type":"publication"},{"authors":["Tobin A Driscoll","JAC Weideman"],"categories":null,"content":"","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1388534400,"objectID":"b04ff28d4f9cc2f6ec200e7338ecec36","permalink":"https://tobydriscoll.net/publication/driscoll-optimal-domain-splitting-2014/","publishdate":"2019-06-06T14:48:49.994266Z","relpermalink":"/publication/driscoll-optimal-domain-splitting-2014/","section":"publication","summary":"","tags":null,"title":"Optimal domain splitting for interpolation by Chebyshev polynomials","type":"publication"},{"authors":["Quan Deng","Richard J Braun","TA Driscoll","P Ewen King-Smith"],"categories":null,"content":"","date":1356998400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1356998400,"objectID":"e6e6d8e951bf3e669f4ab83bc06c6c32","permalink":"https://tobydriscoll.net/publication/deng-model-tear-film-2013/","publishdate":"2019-06-06T14:48:49.981763Z","relpermalink":"/publication/deng-model-tear-film-2013/","section":"publication","summary":"","tags":null,"title":"A Model for the Tear Film and Ocular Surface Temperature for Partial Blinks","type":"publication"},{"authors":["Asgeir Birkisson","Tobin A Driscoll"],"categories":null,"content":"","date":1356998400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1356998400,"objectID":"17fc0cf9be34b1feba74260b719a7bf9","permalink":"https://tobydriscoll.net/publication/birkisson-automatic-linearity-detection-2013/","publishdate":"2019-06-06T14:48:49.977647Z","relpermalink":"/publication/birkisson-automatic-linearity-detection-2013/","section":"publication","summary":"","tags":null,"title":"Automatic Linearity Detection","type":"publication"},{"authors":["Longfei Li","RJ Braun","TA Driscoll","WD Henshaw","JW Banks","PE King-Smith"],"categories":null,"content":"","date":1356998400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1356998400,"objectID":"063b4875af0d8801ede422103ee6cecb","permalink":"https://tobydriscoll.net/publication/li-coupling-osmolarity-dynamics-2013/","publishdate":"2019-06-06T14:48:49.981038Z","relpermalink":"/publication/li-coupling-osmolarity-dynamics-2013/","section":"publication","summary":"","tags":null,"title":"Coupling Osmolarity Dynamics within Human Tear Film on an Eye-Shaped Domain","type":"publication"},{"authors":["Quan Deng","Tobin A Driscoll"],"categories":null,"content":"","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1325376e3,"objectID":"831c0557037261a4628868ec325e2112","permalink":"https://tobydriscoll.net/publication/deng-fast-treecode-multiquadric-2012-a/","publishdate":"2019-06-06T14:48:49.964322Z","relpermalink":"/publication/deng-fast-treecode-multiquadric-2012-a/","section":"publication","summary":"","tags":null,"title":"A Fast Treecode for Multiquadric Interpolation with Varying Shape Parameters","type":"publication"},{"authors":["Quan Deng","Tobin Driscoll","Richard Braun"],"categories":null,"content":"","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1325376e3,"objectID":"64e65e2b4e84fe921c26497c325e57a6","permalink":"https://tobydriscoll.net/publication/deng-model-problem-tear-2012/","publishdate":"2019-06-06T14:48:49.973842Z","relpermalink":"/publication/deng-model-problem-tear-2012/","section":"publication","summary":"","tags":null,"title":"A Model Problem for Tear Film Distribution on a Moving Rectangular Domain","type":"publication"},{"authors":["Asgeir Birkisson","Tobin A Driscoll"],"categories":null,"content":"","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1325376e3,"objectID":"413b6bf7e90112fb3d29557a5f8153d4","permalink":"https://tobydriscoll.net/publication/birkisson-automatic-frechet-differentiation-2012-a/","publishdate":"2019-06-06T14:48:49.939592Z","relpermalink":"/publication/birkisson-automatic-frechet-differentiation-2012-a/","section":"publication","summary":"","tags":null,"title":"Automatic Fréchet Differentiation for the Numerical Solution of Boundary-Value Problems","type":"publication"},{"authors":["Tobin Driscoll"],"categories":null,"content":"","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1325376e3,"objectID":"c4f6c3a27afadb76491074c34f006a30","permalink":"https://tobydriscoll.net/publication/driscoll-chebfun-pd-es-2012/","publishdate":"2019-06-06T14:48:49.998301Z","relpermalink":"/publication/driscoll-chebfun-pd-es-2012/","section":"publication","summary":"","tags":null,"title":"Chebfun for PDEs","type":"publication"},{"authors":["William M Reid","Tobin A Driscoll","Matthew F Doty"],"categories":null,"content":"","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1325376e3,"objectID":"0a7fc1507025ce23efad5974f9d980cd","permalink":"https://tobydriscoll.net/publication/reid-forming-delocalized-intermediate-2012-a/","publishdate":"2019-06-06T14:48:49.960415Z","relpermalink":"/publication/reid-forming-delocalized-intermediate-2012-a/","section":"publication","summary":"Experiments and theoretical models suggest that the performance of intermediate band solar cells based on quantum dots (QDs) will be enhanced by the formation of delocalized intermediate bands. However, reasonable device performance has only been achieved when the QD separation is large and energy states are localized to individual QDs. In this paper we analyze the formation of delocalized bands in a realistic QD material that has inhomogeneously distributed energy levels. We calculate the QD uniformity or barrier thickness necessary to create delocalized states in realistic materials and propose a design to create delocalized states while including strain balancing layers.","tags":null,"title":"Forming Delocalized Intermediate States with Realistic Quantum Dots","type":"publication"},{"authors":["RJ Braun","R Usha","GB McFadden","TA Driscoll","LP Cook","Peter Ewen King-Smith"],"categories":null,"content":"","date":1325376e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1325376e3,"objectID":"936e75a9f06a997c6d651b166b483b97","permalink":"https://tobydriscoll.net/publication/braun-thin-film-dynamics-2012/","publishdate":"2019-06-06T14:48:49.930485Z","relpermalink":"/publication/braun-thin-film-dynamics-2012/","section":"publication","summary":"","tags":null,"title":"Thin Film Dynamics on a Prolate Spheroid with Application to the Cornea","type":"publication"},{"authors":["AMA Neves","TA Driscoll","ARH Heryudono","AJM Ferreira","CMM Soares","RMN Jorge"],"categories":null,"content":"","date":129384e4,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":129384e4,"objectID":"eadb0b90aa66b4c5d0736193b125bf16","permalink":"https://tobydriscoll.net/publication/neves-adaptive-methods-analysis-2011-a/","publishdate":"2019-06-06T14:48:49.94468Z","relpermalink":"/publication/neves-adaptive-methods-analysis-2011-a/","section":"publication","summary":"","tags":null,"title":"Adaptive Methods for Analysis of Composite Plates with Radial Basis Functions","type":"publication"},{"authors":["David C Usher","Tobin A Driscoll","Prasad Dhurjati","John A Pelesko","Louis F Rossi","Gilberto Schleiniger","Kathleen Pusecker","Harold B White"],"categories":null,"content":"","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1262304e3,"objectID":"e851602e9fce6529b3bbe85c81a30488","permalink":"https://tobydriscoll.net/publication/usher-transformative-model-undergraduate-2010-a/","publishdate":"2019-06-06T14:48:49.942396Z","relpermalink":"/publication/usher-transformative-model-undergraduate-2010-a/","section":"publication","summary":"","tags":null,"title":"A Transformative Model for Undergraduate Quantitative Biology Education","type":"publication"},{"authors":["Tobin A Driscoll"],"categories":null,"content":"","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1262304e3,"objectID":"31e3100197f180fc658219b6f57521c7","permalink":"https://tobydriscoll.net/publication/driscoll-automatic-spectral-collocation-2010-a/","publishdate":"2019-06-06T14:48:49.929659Z","relpermalink":"/publication/driscoll-automatic-spectral-collocation-2010-a/","section":"publication","summary":"","tags":null,"title":"Automatic Spectral Collocation for Integral, Integro-Differential, and Integrally Reformulated Differential Equations","type":"publication"},{"authors":["Alfa RH Heryudono","Tobin A Driscoll"],"categories":null,"content":"","date":1262304e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1262304e3,"objectID":"c500b8d901a9678a59146bf3e96cec57","permalink":"https://tobydriscoll.net/publication/heryudono-radial-basis-function-2010-a/","publishdate":"2019-06-06T14:48:49.933244Z","relpermalink":"/publication/heryudono-radial-basis-function-2010-a/","section":"publication","summary":"","tags":null,"title":"Radial Basis Function Interpolation on Irregular Domain through Conformal Transplantation","type":"publication"},{"authors":["LN Trefethen","N Hale","RB Platte","TA Driscoll","R Pachón"],"categories":null,"content":"","date":1230768e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1230768e3,"objectID":"0ceb411772dca80195502998b49f910c","permalink":"https://tobydriscoll.net/publication/trefethen-chebfun-version-2009/","publishdate":"2019-06-06T14:48:49.976775Z","relpermalink":"/publication/trefethen-chebfun-version-2009/","section":"publication","summary":"","tags":null,"title":"Chebfun Version 2","type":"publication"},{"authors":["Tobin A Driscoll"],"categories":null,"content":"","date":1230768e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1230768e3,"objectID":"c8c17010311bd52ce1972290781cbf6f","permalink":"https://tobydriscoll.net/publication/driscoll-learning-matlab-2009/","publishdate":"2019-06-06T14:48:49.931294Z","relpermalink":"/publication/driscoll-learning-matlab-2009/","section":"publication","summary":"","tags":null,"title":"Learning MAtlAB","type":"publication"},{"authors":["KL Maki","RJ Braun","TA Driscoll","PE King-Smith"],"categories":null,"content":"","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1199145600,"objectID":"f2b3eab2ff66d599770e51b2cd931bde","permalink":"https://tobydriscoll.net/publication/maki-overset-grid-method-2008-a/","publishdate":"2019-06-06T14:48:49.925953Z","relpermalink":"/publication/maki-overset-grid-method-2008-a/","section":"publication","summary":"","tags":null,"title":"An Overset Grid Method for the Study of Reflex Tearing","type":"publication"},{"authors":["Thomas K DeLillo","TA Driscoll","Alan R Elcrat","JA Pfaltzgraff"],"categories":null,"content":"","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1199145600,"objectID":"a1833314ae88da9526a5a4984609d8f3","permalink":"https://tobydriscoll.net/publication/delillo-radial-circular-slit-2008-a/","publishdate":"2019-06-06T14:48:49.928812Z","relpermalink":"/publication/delillo-radial-circular-slit-2008-a/","section":"publication","summary":"","tags":null,"title":"Radial and Circular Slit Maps of Unbounded Multiply Connected Circle Domains","type":"publication"},{"authors":["Richard Braun","Jeff McFadden","Usha Ranganathan","Tobin Driscoll","Ewen King-Smith"],"categories":null,"content":"","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1199145600,"objectID":"7f2934dd8fa2f8ede30dda016971677e","permalink":"https://tobydriscoll.net/publication/braun-recent-progress-modeling-2008/","publishdate":"2019-06-06T14:48:49.971716Z","relpermalink":"/publication/braun-recent-progress-modeling-2008/","section":"publication","summary":"","tags":null,"title":"Recent Progress on Modeling the Human Tear Film","type":"publication"},{"authors":["Tobin A Driscoll","Folkmar Bornemann","Lloyd N Trefethen"],"categories":null,"content":"","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1199145600,"objectID":"ff1583e40ba4dfea5077d117af5bc9e2","permalink":"https://tobydriscoll.net/publication/driscoll-chebop-system-automatic-2008-a/","publishdate":"2019-06-06T14:48:49.911679Z","relpermalink":"/publication/driscoll-chebop-system-automatic-2008-a/","section":"publication","summary":"","tags":null,"title":"The Chebop System for Automatic Solution of Differential Equations","type":"publication"},{"authors":["Kara L Maki","RJ Braun","TA Driscoll","A Heryudono","PE King-Smith","P Fast"],"categories":null,"content":"","date":1167609600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1167609600,"objectID":"b463d8116c7072d64bc8f1c1a7ae65c1","permalink":"https://tobydriscoll.net/publication/maki-overset-grid-method-2007/","publishdate":"2019-06-06T14:48:49.970057Z","relpermalink":"/publication/maki-overset-grid-method-2007/","section":"publication","summary":"","tags":null,"title":"A Overset Grid Method for Fourth Order Evolution Equations of Human Tear Film","type":"publication"},{"authors":["Tobin A Driscoll","Alfa RH Heryudono"],"categories":null,"content":"","date":1167609600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1167609600,"objectID":"b383d8590c02a17ca3f8ba0daad2dc1a","permalink":"https://tobydriscoll.net/publication/driscoll-adaptive-residual-subsampling-2007-a/","publishdate":"2019-06-06T14:48:49.898659Z","relpermalink":"/publication/driscoll-adaptive-residual-subsampling-2007-a/","section":"publication","summary":"","tags":null,"title":"Adaptive Residual Subsampling Methods for Radial Basis Function Interpolation and Collocation Problems","type":"publication"},{"authors":["Tobin A Driscoll","Bengt Fornberg"],"categories":null,"content":"","date":1167609600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1167609600,"objectID":"83dd80c2f4740a9e05e27a9de3410a8d","permalink":"https://tobydriscoll.net/publication/driscoll-padebased-interpretation-correction-2007/","publishdate":"2019-06-06T14:48:49.943927Z","relpermalink":"/publication/driscoll-padebased-interpretation-correction-2007/","section":"publication","summary":"","tags":null,"title":"Pade-Based Interpretation and Correction of the Gibbs Phenomenon","type":"publication"},{"authors":["Tobin A Driscoll","Kara L Maki"],"categories":null,"content":"","date":1167609600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1167609600,"objectID":"9d79bb98a65f298d3c8ecfee5c14dd25","permalink":"https://tobydriscoll.net/publication/driscoll-searching-rare-growth-2007-a/","publishdate":"2019-06-06T14:48:49.927811Z","relpermalink":"/publication/driscoll-searching-rare-growth-2007-a/","section":"publication","summary":"","tags":null,"title":"Searching for Rare Growth Factors Using Multicanonical Monte Carlo Methods","type":"publication"},{"authors":["A Heryudono","RJ Braun","TA Driscoll","KL Maki","LP Cook","PE King-Smith"],"categories":null,"content":"","date":1167609600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1167609600,"objectID":"1e26f389447b9b5a546dde9b70c9a91a","permalink":"https://tobydriscoll.net/publication/heryudono-singleequation-models-tear-2007/","publishdate":"2019-06-06T14:48:49.922225Z","relpermalink":"/publication/heryudono-singleequation-models-tear-2007/","section":"publication","summary":"","tags":null,"title":"Single-Equation Models for the Tear Film in a Blink Cycle: Realistic Lid Motion","type":"publication"},{"authors":["Thomas K DeLillo","Tobin A Driscoll","Alan R Elcrat","John A Pfaltzgraff"],"categories":null,"content":"","date":1136073600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1136073600,"objectID":"0b0cbb962ab7e9143705dbda3230aa7a","permalink":"https://tobydriscoll.net/publication/delillo-computation-multiply-connected-2006-a/","publishdate":"2019-06-06T14:48:49.926865Z","relpermalink":"/publication/delillo-computation-multiply-connected-2006-a/","section":"publication","summary":"","tags":null,"title":"Computation of Multiply Connected Schwarz-Christoffel Maps for Exterior Domains","type":"publication"},{"authors":["Rodrigo B Platte","Tobin A Driscoll"],"categories":null,"content":"","date":1136073600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1136073600,"objectID":"951a27f63e87d20d5f24f2907e9e1f43","permalink":"https://tobydriscoll.net/publication/platte-eigenvalue-stability-radial-2006-a/","publishdate":"2019-06-06T14:48:49.906742Z","relpermalink":"/publication/platte-eigenvalue-stability-radial-2006-a/","section":"publication","summary":"","tags":null,"title":"Eigenvalue Stability of Radial Basis Function Discretizations for Time-Dependent Problems","type":"publication"},{"authors":["Tobin A Driscoll"],"categories":null,"content":"","date":1104537600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1104537600,"objectID":"40de731aef607e2912f09db7516674f1","permalink":"https://tobydriscoll.net/publication/driscoll-algorithm-843-improvements-2005/","publishdate":"2019-06-06T14:48:49.913121Z","relpermalink":"/publication/driscoll-algorithm-843-improvements-2005/","section":"publication","summary":"","tags":null,"title":"Algorithm 843: Improvements to the Schwarz-Christoffel Toolbox for MATLAB","type":"publication"},{"authors":["Rodrigo B Platte","Tobin A Driscoll"],"categories":null,"content":"","date":1104537600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1104537600,"objectID":"c5ce5ce269b9f08f175d2f275370051c","permalink":"https://tobydriscoll.net/publication/platte-polynomials-potential-theory-2005-a/","publishdate":"2019-06-06T14:48:49.90581Z","relpermalink":"/publication/platte-polynomials-potential-theory-2005-a/","section":"publication","summary":"","tags":null,"title":"Polynomials and Potential Theory for Gaussian Radial Basis Function Interpolation","type":"publication"},{"authors":["John A Pelesko","Tobin A Driscoll"],"categories":null,"content":"","date":1104537600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1104537600,"objectID":"ea55d166072f0f6a796e0eb5d135776a","permalink":"https://tobydriscoll.net/publication/pelesko-effect-smallaspectratio-approximation-2005/","publishdate":"2019-06-06T14:48:49.924135Z","relpermalink":"/publication/pelesko-effect-smallaspectratio-approximation-2005/","section":"publication","summary":"","tags":null,"title":"The Effect of the Small-Aspect-Ratio Approximation on Canonical Electrostatic MEMS Models","type":"publication"},{"authors":["Tobin Driscoll"],"categories":null,"content":"","date":1072915200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1072915200,"objectID":"de948412393056a0d7948b2b56334a2d","permalink":"https://tobydriscoll.net/publication/driscoll-practical-guide-boundary-2004/","publishdate":"2019-06-06T14:48:49.965588Z","relpermalink":"/publication/driscoll-practical-guide-boundary-2004/","section":"publication","summary":"","tags":null,"title":"A Practical Guide to Boundary Element Methods With the Software Library BEMLIB. By C. P OZRIKIDIS. CRC Press, 2002. 440 Pp. ISBN 1584 883235. $99.95 (Hardback)","type":"publication"},{"authors":["Tobin A Driscoll","John A Pelesko"],"categories":null,"content":"","date":1072915200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1072915200,"objectID":"260f445637351f28d61b87e399b4ab57","permalink":"https://tobydriscoll.net/publication/driscoll-approximations-canonical-electrostatic-2004/","publishdate":"2019-06-06T14:48:49.941391Z","relpermalink":"/publication/driscoll-approximations-canonical-electrostatic-2004/","section":"publication","summary":"","tags":null,"title":"Approximations in Canonical Electrostatic MEMS Models","type":"publication"},{"authors":["Rodrigo B Platte","Tobin A Driscoll"],"categories":null,"content":"","date":1072915200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1072915200,"objectID":"8bad48e9c4277bd2682900ed2b6f455e","permalink":"https://tobydriscoll.net/publication/platte-computing-eigenmodes-elliptic-2004-a/","publishdate":"2019-06-06T14:48:49.902551Z","relpermalink":"/publication/platte-computing-eigenmodes-elliptic-2004-a/","section":"publication","summary":"","tags":null,"title":"Computing Eigenmodes of Elliptic Operators Using Radial Basis Functions","type":"publication"},{"authors":["Charles R Collins","Tobin A Driscoll","Kenneth Stephenson"],"categories":null,"content":"","date":1072915200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1072915200,"objectID":"d11b417f131997cd9962275842bc42a1","permalink":"https://tobydriscoll.net/publication/collins-curvature-flow-conformal-2004/","publishdate":"2019-06-06T14:48:49.932351Z","relpermalink":"/publication/collins-curvature-flow-conformal-2004/","section":"publication","summary":"","tags":null,"title":"Curvature Flow in Conformal Mapping","type":"publication"},{"authors":["Tobin A Driscoll"],"categories":null,"content":"","date":1041379200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1041379200,"objectID":"c856990c19e88cde0a4db5505e8987ec","permalink":"https://tobydriscoll.net/publication/driscoll-crash-course-matlab-2003/","publishdate":"2019-06-06T14:48:49.936489Z","relpermalink":"/publication/driscoll-crash-course-matlab-2003/","section":"publication","summary":"","tags":null,"title":"A Crash Course in Matlab","type":"publication"},{"authors":["Tobin A Driscoll"],"categories":null,"content":"","date":1041379200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1041379200,"objectID":"cfa73b914479eb5e255e4e6202245119","permalink":"https://tobydriscoll.net/publication/driscoll-improved-schwarz-chrisoffel-toolbox-2003/","publishdate":"2019-06-06T14:48:49.946532Z","relpermalink":"/publication/driscoll-improved-schwarz-chrisoffel-toolbox-2003/","section":"publication","summary":"","tags":null,"title":"An Improved Schwarz-Chrisoffel Toolbox for MATLAB","type":"publication"},{"authors":["Tobin A Driscoll","HPW Gottlieb"],"categories":null,"content":"","date":1041379200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1041379200,"objectID":"5417255900569f5817fe1e7752c8c308","permalink":"https://tobydriscoll.net/publication/driscoll-isospectral-shapes-neumann-2003-a/","publishdate":"2019-06-06T14:48:49.925032Z","relpermalink":"/publication/driscoll-isospectral-shapes-neumann-2003-a/","section":"publication","summary":"","tags":null,"title":"Isospectral Shapes with Neumann and Alternating Boundary Conditions","type":"publication"},{"authors":["Tobin Driscoll","Louis Rossi"],"categories":null,"content":"","date":1041379200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1041379200,"objectID":"9c2016ad08fa599943f708e82e14e7f0","permalink":"https://tobydriscoll.net/publication/driscoll-numerical-examination-model-2003/","publishdate":"2019-06-06T14:48:49.968161Z","relpermalink":"/publication/driscoll-numerical-examination-model-2003/","section":"publication","summary":"","tags":null,"title":"Numerical Examination of a Model of Thermo-Acoustic Instabilites in Lean, Pre-Mixed Combustors.","type":"publication"},{"authors":["Tobin A Driscoll"],"categories":null,"content":"","date":1009843200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1009843200,"objectID":"ce9d1d60ec1ce9c92515f64101602760","permalink":"https://tobydriscoll.net/publication/driscoll-composite-runge-kutta-2002-a/","publishdate":"2019-06-06T14:48:49.910363Z","relpermalink":"/publication/driscoll-composite-runge-kutta-2002-a/","section":"publication","summary":"","tags":null,"title":"A Composite Runge–Kutta Method for the Spectral Solution of Semilinear PDEs","type":"publication"},{"authors":["Tobin A Driscoll","Bengt Fornberg"],"categories":null,"content":"","date":1009843200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1009843200,"objectID":"e1ae73c74ae1bdcf7b1ba4fe0e303898","permalink":"https://tobydriscoll.net/publication/driscoll-interpolation-limit-increasingly-2002-a/","publishdate":"2019-06-06T14:48:49.892998Z","relpermalink":"/publication/driscoll-interpolation-limit-increasingly-2002-a/","section":"publication","summary":"","tags":null,"title":"Interpolation in the Limit of Increasingly Flat Radial Basis Functions","type":"publication"},{"authors":["Bengt Fornberg","Tobin A Driscoll","Grady Wright","Richard Charles"],"categories":null,"content":"","date":1009843200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1009843200,"objectID":"40357fd9899430341cad5e68adb1b9c9","permalink":"https://tobydriscoll.net/publication/fornberg-observations-behavior-radial-2002-a/","publishdate":"2019-06-06T14:48:49.895807Z","relpermalink":"/publication/fornberg-observations-behavior-radial-2002-a/","section":"publication","summary":"","tags":null,"title":"Observations on the Behavior of Radial Basis Function Approximations near Boundaries","type":"publication"},{"authors":["Tobin A Driscoll","Lloyd N Trefethen"],"categories":null,"content":"","date":1009843200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1009843200,"objectID":"a47aa0df5f96b3a6f2d2096552b28e4e","permalink":"https://tobydriscoll.net/publication/driscoll-schwarz-christoffel-mapping-2002/","publishdate":"2019-06-06T14:48:49.97531Z","relpermalink":"/publication/driscoll-schwarz-christoffel-mapping-2002/","section":"publication","summary":"","tags":null,"title":"Schwarz–Christoffel Mapping","type":"publication"},{"authors":["Michele Goano","Francesco Bertazzi","Paolo Caravelli","Giovanni Ghione","Tobin A Driscoll"],"categories":null,"content":"","date":978307200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":978307200,"objectID":"a35e9aa8d7f3f9ad29804e1af5e28211","permalink":"https://tobydriscoll.net/publication/goano-general-conformalmapping-approach-2001-a/","publishdate":"2019-06-06T14:48:49.903536Z","relpermalink":"/publication/goano-general-conformalmapping-approach-2001-a/","section":"publication","summary":"","tags":null,"title":"A General Conformal-Mapping Approach to the Optimum Electrode Design of Coplanar Waveguides with Arbitrary Cross Section","type":"publication"},{"authors":["Tobin A Driscoll","Bengt Fornberg"],"categories":null,"content":"","date":978307200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":978307200,"objectID":"c7d6d13858a07555bd7239cf8d2284e9","permalink":"https://tobydriscoll.net/publication/driscoll-padebased-algorithm-overcoming-2001-a/","publishdate":"2019-06-06T14:48:49.897625Z","relpermalink":"/publication/driscoll-padebased-algorithm-overcoming-2001-a/","section":"publication","summary":"","tags":null,"title":"A Padé-Based Algorithm for Overcoming the Gibbs Phenomenon","type":"publication"},{"authors":["Tobin A Driscoll","Bengt Fornberg"],"categories":null,"content":"","date":946684800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":946684800,"objectID":"7e024051d07a5a41467f4deedeaf50e6","permalink":"https://tobydriscoll.net/publication/driscoll-note-nonsymmetric-finite-2000/","publishdate":"2019-06-06T14:48:49.940513Z","relpermalink":"/publication/driscoll-note-nonsymmetric-finite-2000/","section":"publication","summary":"","tags":null,"title":"Note on Nonsymmetric Finite Differences for Maxwell's Equations","type":"publication"},{"authors":["Michelle Ghrist","Bengt Fornberg","Tobin A Driscoll"],"categories":null,"content":"","date":946684800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":946684800,"objectID":"0372a1a998dfb62c6152f5cd02cf8b9b","permalink":"https://tobydriscoll.net/publication/ghrist-staggered-time-integrators-2000-a/","publishdate":"2019-06-06T14:48:49.901439Z","relpermalink":"/publication/ghrist-staggered-time-integrators-2000-a/","section":"publication","summary":"","tags":null,"title":"Staggered Time Integrators for Wave Equations","type":"publication"},{"authors":["Bengt Fornberg","Tobin A Driscoll"],"categories":null,"content":"","date":915148800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":915148800,"objectID":"92fcf3879eebe9e40d7e58abec9879dd","permalink":"https://tobydriscoll.net/publication/fornberg-fast-spectral-algorithm-1999-a/","publishdate":"2019-06-06T14:48:49.894773Z","relpermalink":"/publication/fornberg-fast-spectral-algorithm-1999-a/","section":"publication","summary":"","tags":null,"title":"A Fast Spectral Algorithm for Nonlinear Wave Equations with Linear Dispersion","type":"publication"},{"authors":["Tobin A Driscoll"],"categories":null,"content":"","date":915148800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":915148800,"objectID":"05b6cd21ec3a7542905378bcd244c88a","permalink":"https://tobydriscoll.net/publication/driscoll-nonoverlapping-domain-decomposition-1999-a/","publishdate":"2019-06-06T14:48:49.934514Z","relpermalink":"/publication/driscoll-nonoverlapping-domain-decomposition-1999-a/","section":"publication","summary":"","tags":null,"title":"A Nonoverlapping Domain Decomposition Method for Symm's Equation for Conformal Mapping","type":"publication"},{"authors":["Tobin A Driscoll","Bengt Fornberg"],"categories":null,"content":"","date":915148800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":915148800,"objectID":"9c68e17a1584e8ad28853c6959d83865","permalink":"https://tobydriscoll.net/publication/driscoll-block-pseudospectral-methods-1999/","publishdate":"2019-06-06T14:48:49.915525Z","relpermalink":"/publication/driscoll-block-pseudospectral-methods-1999/","section":"publication","summary":"","tags":null,"title":"Block Pseudospectral Methods for Maxwell's Equations II: Two-Dimensional, Discontinuous-Coefficient Case","type":"publication"},{"authors":["Tobin A Driscoll"],"categories":null,"content":"","date":915148800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":915148800,"objectID":"4b895344569c664ab62a1e6165a7b398","permalink":"https://tobydriscoll.net/publication/driscoll-computational-conformal-mapping-1999/","publishdate":"2019-06-06T14:48:50.021353Z","relpermalink":"/publication/driscoll-computational-conformal-mapping-1999/","section":"publication","summary":"","tags":null,"title":"Computational Conformal Mapping (Book Review)","type":"publication"},{"authors":["Tobin A Driscoll","Bengt Fornberg"],"categories":null,"content":"","date":883612800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":883612800,"objectID":"6ae22d7b67ff9ab24301f381e148d237","permalink":"https://tobydriscoll.net/publication/driscoll-block-pseudospectral-method-1998-a/","publishdate":"2019-06-06T14:48:49.909188Z","relpermalink":"/publication/driscoll-block-pseudospectral-method-1998-a/","section":"publication","summary":"","tags":null,"title":"A Block Pseudospectral Method for Maxwell's Equations: I. One-Dimensional Case","type":"publication"},{"authors":["Tobin A Driscoll","Kim-Chuan Toh","Lloyd N Trefethen"],"categories":null,"content":"","date":883612800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":883612800,"objectID":"7b42797755229454c69831dad299ba1e","permalink":"https://tobydriscoll.net/publication/driscoll-potential-theory-matrix-1998-a/","publishdate":"2019-06-06T14:48:49.896665Z","relpermalink":"/publication/driscoll-potential-theory-matrix-1998-a/","section":"publication","summary":"","tags":null,"title":"From Potential Theory to Matrix Iterations in Six Steps","type":"publication"},{"authors":["Tobin A Driscoll","Stephen A Vavasis"],"categories":null,"content":"","date":883612800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":883612800,"objectID":"484b81df87ba09d9d4cfb42e2fb5a78d","permalink":"https://tobydriscoll.net/publication/driscoll-numerical-conformal-mapping-1998-a/","publishdate":"2019-06-06T14:48:49.900447Z","relpermalink":"/publication/driscoll-numerical-conformal-mapping-1998-a/","section":"publication","summary":"","tags":null,"title":"Numerical Conformal Mapping Using Cross-Ratios and Delaunay Triangulation","type":"publication"},{"authors":["Lloyd N Trefethen","Tobin A Driscoll"],"categories":null,"content":"","date":883612800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":883612800,"objectID":"482e0b1238d28d97cb871876affb16e5","permalink":"https://tobydriscoll.net/publication/trefethen-schwarz-christoffel-mapping-computer-1998/","publishdate":"2019-06-06T14:48:49.918901Z","relpermalink":"/publication/trefethen-schwarz-christoffel-mapping-computer-1998/","section":"publication","summary":"","tags":null,"title":"Schwarz-Christoffel Mapping in the Computer Era","type":"publication"},{"authors":["Tobin A Driscoll","Bengt Fornberg"],"categories":null,"content":"","date":883612800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":883612800,"objectID":"6ebc62ccba2e850c5f4750b307d8c61a","permalink":"https://tobydriscoll.net/publication/driscoll-uses-berenger-pml-1998/","publishdate":"2019-06-06T14:48:49.969169Z","relpermalink":"/publication/driscoll-uses-berenger-pml-1998/","section":"publication","summary":"","tags":null,"title":"Uses of the Berenger PML in Pseudospectral Methods for Maxwell's Equations","type":"publication"},{"authors":["Tobin A Driscoll"],"categories":null,"content":"","date":852076800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":852076800,"objectID":"1df1b153ae0960c06f1c88d7b0b12b13","permalink":"https://tobydriscoll.net/publication/driscoll-eigenmodes-isospectral-drums-1997-a/","publishdate":"2019-06-06T14:48:49.899497Z","relpermalink":"/publication/driscoll-eigenmodes-isospectral-drums-1997-a/","section":"publication","summary":"","tags":null,"title":"Eigenmodes of Isospectral Drums","type":"publication"},{"authors":["G Wojcik","B Fomberg","R Waag","L Carcione","J Mould","L Nikodym","T Driscoll"],"categories":null,"content":"","date":852076800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":852076800,"objectID":"c55f7dfaeba11f049bb4e02dcc333c3a","permalink":"https://tobydriscoll.net/publication/wojcik-pseudospectral-methods-largescale-1997/","publishdate":"2019-06-06T14:48:49.904503Z","relpermalink":"/publication/wojcik-pseudospectral-methods-largescale-1997/","section":"publication","summary":"","tags":null,"title":"Pseudospectral Methods for Large-Scale Bioacoustic Models","type":"publication"},{"authors":["Tobin A Driscoll"],"categories":null,"content":"","date":820454400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":820454400,"objectID":"ce9203ac347848c4194d4fadfb641365","permalink":"https://tobydriscoll.net/publication/driscoll-algorithm-756-matlab-1996/","publishdate":"2019-06-06T14:48:49.892338Z","relpermalink":"/publication/driscoll-algorithm-756-matlab-1996/","section":"publication","summary":"","tags":null,"title":"Algorithm 756: A MATLAB Toolbox for Schwarz-Christoffel Mapping","type":"publication"},{"authors":["Tobin Allen Driscoll"],"categories":null,"content":"","date":820454400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":820454400,"objectID":"cc3ec668d476223bb4df1ef0244e52fb","permalink":"https://tobydriscoll.net/publication/driscoll-domain-decomposition-methods-1996/","publishdate":"2019-06-06T14:48:49.972458Z","relpermalink":"/publication/driscoll-domain-decomposition-methods-1996/","section":"publication","summary":"","tags":null,"title":"Domain Decomposition Methods for Conformal Mapping and Eigenvalue Problems","type":"publication"},{"authors":["Tobin A Driscoll","Kim-Chuan Toh","Lloyd N Trefethen"],"categories":null,"content":"","date":820454400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":820454400,"objectID":"a9468eea9881b0e28ac641dcee28b800","permalink":"https://tobydriscoll.net/publication/driscoll-matrix-iterations-six-1996/","publishdate":"2019-06-06T14:48:49.935524Z","relpermalink":"/publication/driscoll-matrix-iterations-six-1996/","section":"publication","summary":"","tags":null,"title":"Matrix Iterations: The Six Gaps between Potential Theory and Convergence","type":"publication"},{"authors":["Stephen A Vavasis"],"categories":null,"content":"","date":820454400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":820454400,"objectID":"b6c89698220a7971198bf137550aaa72","permalink":"https://tobydriscoll.net/publication/vavasis-numerical-conformal-mapping-1996/","publishdate":"2019-06-06T14:48:50.008411Z","relpermalink":"/publication/vavasis-numerical-conformal-mapping-1996/","section":"publication","summary":"","tags":null,"title":"Numerical Conformal Mapping Using Cross-Ratios and Delaunay Triangulation","type":"publication"},{"authors":["Tobin A Driscoll","Lloyd N Trefethen"],"categories":null,"content":"","date":820454400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":820454400,"objectID":"ec9226944ba2e41c14bdda89a6cb2c63","permalink":"https://tobydriscoll.net/publication/driscoll-pseudospectra-wave-equation-1996-a/","publishdate":"2019-06-06T14:48:49.920956Z","relpermalink":"/publication/driscoll-pseudospectra-wave-equation-1996-a/","section":"publication","summary":"","tags":null,"title":"Pseudospectra for the Wave Equation with an Absorbing Boundary","type":"publication"},{"authors":["Jeffrey S Baggett","Tobin A Driscoll","Lloyd N Trefethen"],"categories":null,"content":"","date":788918400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":788918400,"objectID":"18795df99d3ca3bc5279db2297ffe662","permalink":"https://tobydriscoll.net/publication/baggett-mostly-linear-model-1995/","publishdate":"2019-06-06T14:48:49.893758Z","relpermalink":"/publication/baggett-mostly-linear-model-1995/","section":"publication","summary":"","tags":null,"title":"A Mostly Linear Model of Transition to Turbulence","type":"publication"},{"authors":["TA Driscoll","LN Trefethen"],"categories":null,"content":"","date":757382400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":757382400,"objectID":"1ba82e41cb2ba2f561ddb2f5ed0bc4df","permalink":"https://tobydriscoll.net/publication/driscoll-conformal-mapping-convergence-1994/","publishdate":"2019-06-06T14:48:49.997263Z","relpermalink":"/publication/driscoll-conformal-mapping-convergence-1994/","section":"publication","summary":"","tags":null,"title":"Conformal Mapping and Convergence of Krylov Iterations","type":"publication"},{"authors":["Tobin A Driscoll"],"categories":null,"content":"","date":757382400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":757382400,"objectID":"e41a1e0a229d6cdd474e6f6965102490","permalink":"https://tobydriscoll.net/publication/driscoll-schwarz-christoffel-toolbox-matlab-1994/","publishdate":"2019-06-06T14:48:49.907797Z","relpermalink":"/publication/driscoll-schwarz-christoffel-toolbox-matlab-1994/","section":"publication","summary":"","tags":null,"title":"Schwarz-Christoffel Toolbox for MATLAB","type":"publication"},{"authors":["Tobin A Driscoll"],"categories":null,"content":"","date":757382400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":757382400,"objectID":"b5d834cee0c0530d3779c6a41f58ec01","permalink":"https://tobydriscoll.net/publication/driscoll-schwarz-christoffel-toolbox-user-1994/","publishdate":"2019-06-06T14:48:49.937553Z","relpermalink":"/publication/driscoll-schwarz-christoffel-toolbox-user-1994/","section":"publication","summary":"","tags":null,"title":"Schwarz-Christoffel Toolbox User's Guide","type":"publication"},{"authors":["JOHN E DZIELSKI","TOBIN A DRISCOLL"],"categories":null,"content":"","date":725846400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":725846400,"objectID":"d04428c8f52307ef5f017964ad16d6d5","permalink":"https://tobydriscoll.net/publication/dzielski-error-bound-solution-1993-a/","publishdate":"2019-06-06T14:48:49.980224Z","relpermalink":"/publication/dzielski-error-bound-solution-1993-a/","section":"publication","summary":"","tags":null,"title":"Error Bound on the Solution of a Linear Differential Equation in Chebyshev Series","type":"publication"},{"authors":["Lloyd N Trefethen","Anne E Trefethen","Satish C Reddy","Tobin A Driscoll"],"categories":null,"content":"","date":725846400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":725846400,"objectID":"bf61b7d802d9dad26dac0f6aa2391e0b","permalink":"https://tobydriscoll.net/publication/trefethen-hydrodynamic-stability-eigenvalues-1993-a/","publishdate":"2019-06-06T14:48:49.891195Z","relpermalink":"/publication/trefethen-hydrodynamic-stability-eigenvalues-1993-a/","section":"publication","summary":"","tags":null,"title":"Hydrodynamic Stability without Eigenvalues","type":"publication"},{"authors":["Tobin A Driscoll","Lloyd N Trefethen"],"categories":null,"content":"","date":725846400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":725846400,"objectID":"795c8a695bd554239a0930e74f3f6013","permalink":"https://tobydriscoll.net/publication/driscoll-pseudospectra-wave-operator-1993/","publishdate":"2019-06-06T14:48:49.938832Z","relpermalink":"/publication/driscoll-pseudospectra-wave-operator-1993/","section":"publication","summary":"","tags":null,"title":"Pseudospectra of the Wave Operator with an Absorbing Boundary","type":"publication"},{"authors":["Lloyd N Trefethen","Anne E Trefethen","Satish C Reddy","Tobin A Driscoll"],"categories":null,"content":"","date":694224e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":694224e3,"objectID":"7f3ff69379e16484a92ceda7e2d10de9","permalink":"https://tobydriscoll.net/publication/trefethen-new-direction-hydrodynamic-1992/","publishdate":"2019-06-06T14:48:49.923197Z","relpermalink":"/publication/trefethen-new-direction-hydrodynamic-1992/","section":"publication","summary":"","tags":null,"title":"A New Direction in Hydrodynamic Stability: Beyond Eigenvalues","type":"publication"},{"authors":["TA Driscoll","JE Dzielski"],"categories":null,"content":"","date":694224e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":694224e3,"objectID":"310257ffdd87c32a591b7c58ac5ef83a","permalink":"https://tobydriscoll.net/publication/driscoll-computational-efficiency-functional-1992/","publishdate":"2019-06-06T14:48:49.974578Z","relpermalink":"/publication/driscoll-computational-efficiency-functional-1992/","section":"publication","summary":"","tags":null,"title":"Computational Efficiency of a Functional Expansion Algorithm for Linear Quadratic Optimal Control","type":"publication"},{"authors":["Tobin A Driscoll"],"categories":null,"content":"","date":662688e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":662688e3,"objectID":"3d1c414e719c63ffd730adba0108f242","permalink":"https://tobydriscoll.net/publication/driscoll-comparison-computational-efficiency-1991/","publishdate":"2019-06-06T14:48:50.015559Z","relpermalink":"/publication/driscoll-comparison-computational-efficiency-1991/","section":"publication","summary":"","tags":null,"title":"Comparison of Computational Efficiency and Sensitivity of Several Solution Algorithms for the Linear-Quadratic Optimal Control Problem","type":"publication"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"f26b5133c34eec1aa0a09390a36c2ade","permalink":"https://tobydriscoll.net/admin/config.yml","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/admin/config.yml","section":"","summary":"","tags":null,"title":"","type":"wowchemycms"}]