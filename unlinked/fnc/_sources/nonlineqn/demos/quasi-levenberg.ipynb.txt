{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Using `levenberg`\n",
    "\n",
    "To solve a nonlinear system, we need to code only the function defining the system (residual vector), and not its Jacobian."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "nlsystem (generic function with 1 method)"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "function nlsystem(x)\n",
    "    return [ \n",
    "        exp(x[2]-x[1]) - 2,\n",
    "        x[1]*x[2] + x[3],\n",
    "        x[2]*x[3] + x[1]^2 - x[2]\n",
    "        ]\n",
    "end"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In all other respects usage is the same as for the `newtonsys` function."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "12-element Array{Array{Float64,1},1}:\n",
       " [0.0, 0.0, 0.0]\n",
       " [-0.08396946555420857, 0.07633587776621241, 0.0]\n",
       " [-0.4220507601545548, 0.21991260524972361, 0.012997569767382334]\n",
       " [-0.48610710902101084, 0.21389682964709655, 0.0977187252071678]\n",
       " [-0.45628390779216876, 0.2421104774129355, 0.10100440266654645]\n",
       " [-0.45563883362225116, 0.23470443539126568, 0.108546657255663]\n",
       " [-0.4583961451217119, 0.23530956863847285, 0.10739828072313906]\n",
       " [-0.4580434038157383, 0.23512124061139036, 0.10768079583181711]\n",
       " [-0.4580333258441392, 0.23511390840122376, 0.1076899804953973]\n",
       " [-0.45803327880719313, 0.23511389867393445, 0.10768999250671268]\n",
       " [-0.45803328056019965, 0.23511389986307896, 0.107689990975689]\n",
       " [-0.458033280641234, 0.2351138999186528, 0.10768999090414473]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "using FundamentalsNumericalComputation\n",
    "\n",
    "x1 = [0,0,0]   \n",
    "x = FNC.levenberg(nlsystem,x1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It's always a good idea to check the accuracy of the root, by measuring the residual (backward error)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "backward_err = norm(nlsystem(r)) = 1.2708308198538738e-13\n"
     ]
    }
   ],
   "source": [
    "using LinearAlgebra\n",
    "r = x[end]\n",
    "@show backward_err = norm(nlsystem(r));"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Looking at the convergence of the first component, we find a subquadratic convergence rate, just as with the secant method."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "11-element Array{Float64,1}:\n",
       "  -0.642464608920046\n",
       "  -0.8665622983300257\n",
       "  -2.278548436446176\n",
       "  -3.3083905468408217\n",
       "  -4.621899500113314\n",
       "  -5.961582353290289\n",
       "  -7.590899766347262\n",
       " -11.073290988317947\n",
       " -16.86982474417951\n",
       " -19.71706564311687\n",
       " -22.830722547915087"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "[ log(norm(x[k]-r)) for k in 1:length(x)-1 ]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Julia faststart",
   "language": "julia",
   "name": "julia-fast"
  },
  "language_info": {
   "file_extension": ".jl",
   "mimetype": "application/julia",
   "name": "julia",
   "version": "1.4.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
